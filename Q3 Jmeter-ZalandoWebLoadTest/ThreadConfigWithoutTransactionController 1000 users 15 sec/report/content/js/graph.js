/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 437.0, "minX": 0.0, "maxY": 128787.0, "series": [{"data": [[0.0, 21479.0], [0.1, 21479.0], [0.2, 22680.0], [0.3, 22680.0], [0.4, 23906.0], [0.5, 23906.0], [0.6, 23906.0], [0.7, 25219.0], [0.8, 25314.0], [0.9, 25314.0], [1.0, 25566.0], [1.1, 25566.0], [1.2, 26031.0], [1.3, 26031.0], [1.4, 26189.0], [1.5, 26189.0], [1.6, 26225.0], [1.7, 26225.0], [1.8, 26341.0], [1.9, 26341.0], [2.0, 26348.0], [2.1, 26348.0], [2.2, 26379.0], [2.3, 26379.0], [2.4, 26464.0], [2.5, 26464.0], [2.6, 26576.0], [2.7, 26576.0], [2.8, 26576.0], [2.9, 26589.0], [3.0, 26589.0], [3.1, 26712.0], [3.2, 26712.0], [3.3, 26754.0], [3.4, 26754.0], [3.5, 27026.0], [3.6, 27026.0], [3.7, 27072.0], [3.8, 27072.0], [3.9, 27085.0], [4.0, 27085.0], [4.1, 27124.0], [4.2, 27124.0], [4.3, 27266.0], [4.4, 27266.0], [4.5, 27295.0], [4.6, 27295.0], [4.7, 27502.0], [4.8, 27502.0], [4.9, 28155.0], [5.0, 28155.0], [5.1, 28370.0], [5.2, 28370.0], [5.3, 28427.0], [5.4, 28427.0], [5.5, 28510.0], [5.6, 28510.0], [5.7, 29043.0], [5.8, 29043.0], [5.9, 29263.0], [6.0, 29263.0], [6.1, 29675.0], [6.2, 29675.0], [6.3, 29716.0], [6.4, 29716.0], [6.5, 29728.0], [6.6, 29728.0], [6.7, 29885.0], [6.8, 29885.0], [6.9, 29923.0], [7.0, 29923.0], [7.1, 30940.0], [7.2, 30940.0], [7.3, 31063.0], [7.4, 31063.0], [7.5, 31957.0], [7.6, 31957.0], [7.7, 32031.0], [7.8, 32031.0], [7.9, 32166.0], [8.0, 32166.0], [8.1, 32288.0], [8.2, 32288.0], [8.3, 32355.0], [8.4, 32355.0], [8.5, 32385.0], [8.6, 32385.0], [8.7, 32502.0], [8.8, 33007.0], [8.9, 33007.0], [9.0, 33115.0], [9.1, 33115.0], [9.2, 33137.0], [9.3, 33137.0], [9.4, 33149.0], [9.5, 33149.0], [9.6, 33332.0], [9.7, 33332.0], [9.8, 33533.0], [9.9, 33533.0], [10.0, 33779.0], [10.1, 33779.0], [10.2, 34000.0], [10.3, 34000.0], [10.4, 34054.0], [10.5, 34054.0], [10.6, 34370.0], [10.7, 34370.0], [10.8, 35302.0], [10.9, 35302.0], [11.0, 35365.0], [11.1, 35365.0], [11.2, 35580.0], [11.3, 35580.0], [11.4, 36082.0], [11.5, 36082.0], [11.6, 36443.0], [11.7, 36443.0], [11.8, 36723.0], [11.9, 36723.0], [12.0, 36804.0], [12.1, 36804.0], [12.2, 37337.0], [12.3, 37337.0], [12.4, 37575.0], [12.5, 37575.0], [12.6, 37929.0], [12.7, 37929.0], [12.8, 38044.0], [12.9, 38044.0], [13.0, 38391.0], [13.1, 38391.0], [13.2, 38438.0], [13.3, 38438.0], [13.4, 38513.0], [13.5, 38513.0], [13.6, 38589.0], [13.7, 38589.0], [13.8, 38691.0], [13.9, 38691.0], [14.0, 38774.0], [14.1, 38774.0], [14.2, 39459.0], [14.3, 39459.0], [14.4, 39715.0], [14.5, 39715.0], [14.6, 40075.0], [14.7, 40075.0], [14.8, 40164.0], [14.9, 40164.0], [15.0, 41186.0], [15.1, 41186.0], [15.2, 41644.0], [15.3, 41644.0], [15.4, 41648.0], [15.5, 41648.0], [15.6, 41738.0], [15.7, 41738.0], [15.8, 42356.0], [15.9, 42356.0], [16.0, 42758.0], [16.1, 42758.0], [16.2, 42905.0], [16.3, 42905.0], [16.4, 43155.0], [16.5, 43155.0], [16.6, 43425.0], [16.7, 43425.0], [16.8, 43888.0], [16.9, 43888.0], [17.0, 44210.0], [17.1, 44210.0], [17.2, 44412.0], [17.3, 44412.0], [17.4, 44696.0], [17.5, 44696.0], [17.6, 45012.0], [17.7, 45012.0], [17.8, 46889.0], [17.9, 46889.0], [18.0, 47164.0], [18.1, 47164.0], [18.2, 48071.0], [18.3, 48071.0], [18.4, 48099.0], [18.5, 48099.0], [18.6, 48177.0], [18.7, 48177.0], [18.8, 48177.0], [18.9, 48177.0], [19.0, 48454.0], [19.1, 48454.0], [19.2, 48614.0], [19.3, 48614.0], [19.4, 48720.0], [19.5, 48720.0], [19.6, 49560.0], [19.7, 49560.0], [19.8, 50144.0], [19.9, 50144.0], [20.0, 50256.0], [20.1, 50256.0], [20.2, 50393.0], [20.3, 50393.0], [20.4, 50451.0], [20.5, 50451.0], [20.6, 50507.0], [20.7, 50507.0], [20.8, 50936.0], [20.9, 50936.0], [21.0, 51060.0], [21.1, 51060.0], [21.2, 51415.0], [21.3, 51415.0], [21.4, 51833.0], [21.5, 51833.0], [21.6, 52004.0], [21.7, 52004.0], [21.8, 52253.0], [21.9, 52253.0], [22.0, 52523.0], [22.1, 52523.0], [22.2, 52529.0], [22.3, 52529.0], [22.4, 52714.0], [22.5, 52714.0], [22.6, 52777.0], [22.7, 52777.0], [22.8, 53253.0], [22.9, 53253.0], [23.0, 53595.0], [23.1, 53595.0], [23.2, 53958.0], [23.3, 53958.0], [23.4, 54105.0], [23.5, 54105.0], [23.6, 54184.0], [23.7, 54184.0], [23.8, 54236.0], [23.9, 54236.0], [24.0, 54283.0], [24.1, 54283.0], [24.2, 54283.0], [24.3, 54283.0], [24.4, 54486.0], [24.5, 54486.0], [24.6, 54541.0], [24.7, 54541.0], [24.8, 54661.0], [24.9, 54661.0], [25.0, 54701.0], [25.1, 54701.0], [25.2, 54849.0], [25.3, 54849.0], [25.4, 54894.0], [25.5, 54894.0], [25.6, 54906.0], [25.7, 54906.0], [25.8, 55769.0], [25.9, 55769.0], [26.0, 56243.0], [26.1, 56243.0], [26.2, 56289.0], [26.3, 56289.0], [26.4, 56612.0], [26.5, 56612.0], [26.6, 56817.0], [26.7, 56817.0], [26.8, 56879.0], [26.9, 56879.0], [27.0, 56968.0], [27.1, 56968.0], [27.2, 57509.0], [27.3, 57509.0], [27.4, 57599.0], [27.5, 57599.0], [27.6, 58143.0], [27.7, 58143.0], [27.8, 58186.0], [27.9, 58186.0], [28.0, 58191.0], [28.1, 58191.0], [28.2, 58294.0], [28.3, 58294.0], [28.4, 58654.0], [28.5, 58654.0], [28.6, 59041.0], [28.7, 59041.0], [28.8, 59254.0], [28.9, 59254.0], [29.0, 59375.0], [29.1, 59375.0], [29.2, 59525.0], [29.3, 59525.0], [29.4, 59684.0], [29.5, 59684.0], [29.6, 59948.0], [29.7, 59948.0], [29.8, 60015.0], [29.9, 60015.0], [30.0, 60038.0], [30.1, 60038.0], [30.2, 60209.0], [30.3, 60209.0], [30.4, 60250.0], [30.5, 60250.0], [30.6, 60559.0], [30.7, 60559.0], [30.8, 61139.0], [30.9, 61139.0], [31.0, 61214.0], [31.1, 61214.0], [31.2, 61219.0], [31.3, 61219.0], [31.4, 61399.0], [31.5, 61399.0], [31.6, 61447.0], [31.7, 61447.0], [31.8, 61525.0], [31.9, 61525.0], [32.0, 61658.0], [32.1, 61658.0], [32.2, 61836.0], [32.3, 61836.0], [32.4, 61837.0], [32.5, 61837.0], [32.6, 61957.0], [32.7, 61957.0], [32.8, 62089.0], [32.9, 62089.0], [33.0, 62235.0], [33.1, 62235.0], [33.2, 62238.0], [33.3, 62238.0], [33.4, 62413.0], [33.5, 62413.0], [33.6, 62966.0], [33.7, 62966.0], [33.8, 63004.0], [33.9, 63004.0], [34.0, 63173.0], [34.1, 63173.0], [34.2, 63177.0], [34.3, 63177.0], [34.4, 63328.0], [34.5, 63328.0], [34.6, 63335.0], [34.7, 63335.0], [34.8, 63389.0], [34.9, 63389.0], [35.0, 63701.0], [35.1, 63701.0], [35.2, 63711.0], [35.3, 63711.0], [35.4, 64033.0], [35.5, 64033.0], [35.6, 64087.0], [35.7, 64087.0], [35.8, 64234.0], [35.9, 64234.0], [36.0, 64363.0], [36.1, 64363.0], [36.2, 64524.0], [36.3, 64524.0], [36.4, 64542.0], [36.5, 64542.0], [36.6, 64775.0], [36.7, 64775.0], [36.8, 65213.0], [36.9, 65213.0], [37.0, 65319.0], [37.1, 65319.0], [37.2, 65394.0], [37.3, 65394.0], [37.4, 65485.0], [37.5, 65485.0], [37.6, 65932.0], [37.7, 65932.0], [37.8, 66020.0], [37.9, 66020.0], [38.0, 66220.0], [38.1, 66220.0], [38.2, 67107.0], [38.3, 67107.0], [38.4, 67107.0], [38.5, 67126.0], [38.6, 67126.0], [38.7, 67306.0], [38.8, 67306.0], [38.9, 67418.0], [39.0, 67418.0], [39.1, 67533.0], [39.2, 67533.0], [39.3, 67620.0], [39.4, 67620.0], [39.5, 67641.0], [39.6, 67641.0], [39.7, 67777.0], [39.8, 67777.0], [39.9, 67894.0], [40.0, 67894.0], [40.1, 68069.0], [40.2, 68069.0], [40.3, 68100.0], [40.4, 68100.0], [40.5, 68363.0], [40.6, 68363.0], [40.7, 68460.0], [40.8, 68460.0], [40.9, 68577.0], [41.0, 68577.0], [41.1, 69125.0], [41.2, 69125.0], [41.3, 69172.0], [41.4, 69172.0], [41.5, 69434.0], [41.6, 69434.0], [41.7, 69596.0], [41.8, 69596.0], [41.9, 69648.0], [42.0, 69648.0], [42.1, 69688.0], [42.2, 69688.0], [42.3, 70392.0], [42.4, 70392.0], [42.5, 70470.0], [42.6, 70470.0], [42.7, 70604.0], [42.8, 70604.0], [42.9, 70803.0], [43.0, 70803.0], [43.1, 71167.0], [43.2, 71167.0], [43.3, 71250.0], [43.4, 71250.0], [43.5, 71397.0], [43.6, 71397.0], [43.7, 71412.0], [43.8, 71412.0], [43.9, 71471.0], [44.0, 71471.0], [44.1, 72038.0], [44.2, 72038.0], [44.3, 72395.0], [44.4, 72395.0], [44.5, 72590.0], [44.6, 72590.0], [44.7, 72735.0], [44.8, 72735.0], [44.9, 72749.0], [45.0, 72749.0], [45.1, 73216.0], [45.2, 73216.0], [45.3, 73479.0], [45.4, 73479.0], [45.5, 73689.0], [45.6, 73689.0], [45.7, 73977.0], [45.8, 73977.0], [45.9, 74023.0], [46.0, 74023.0], [46.1, 74764.0], [46.2, 74764.0], [46.3, 75089.0], [46.4, 75089.0], [46.5, 75095.0], [46.6, 75095.0], [46.7, 75259.0], [46.8, 75259.0], [46.9, 75706.0], [47.0, 75706.0], [47.1, 75759.0], [47.2, 75759.0], [47.3, 76111.0], [47.4, 76111.0], [47.5, 76842.0], [47.6, 76842.0], [47.7, 76888.0], [47.8, 76888.0], [47.9, 77027.0], [48.0, 77027.0], [48.1, 77478.0], [48.2, 77478.0], [48.3, 77740.0], [48.4, 77740.0], [48.5, 77942.0], [48.6, 77942.0], [48.7, 77972.0], [48.8, 77972.0], [48.9, 78407.0], [49.0, 78407.0], [49.1, 78572.0], [49.2, 78572.0], [49.3, 78643.0], [49.4, 78643.0], [49.5, 78884.0], [49.6, 78884.0], [49.7, 79398.0], [49.8, 79398.0], [49.9, 79407.0], [50.0, 79407.0], [50.1, 79416.0], [50.2, 79416.0], [50.3, 79431.0], [50.4, 79431.0], [50.5, 79604.0], [50.6, 79604.0], [50.7, 79684.0], [50.8, 79684.0], [50.9, 79944.0], [51.0, 79944.0], [51.1, 80021.0], [51.2, 80021.0], [51.3, 80114.0], [51.4, 80114.0], [51.5, 80581.0], [51.6, 80581.0], [51.7, 80612.0], [51.8, 80612.0], [51.9, 80643.0], [52.0, 80643.0], [52.1, 80730.0], [52.2, 80730.0], [52.3, 80769.0], [52.4, 80769.0], [52.5, 80909.0], [52.6, 80909.0], [52.7, 80918.0], [52.8, 80918.0], [52.9, 81418.0], [53.0, 81418.0], [53.1, 81480.0], [53.2, 81480.0], [53.3, 81519.0], [53.4, 81519.0], [53.5, 81766.0], [53.6, 81766.0], [53.7, 81784.0], [53.8, 81784.0], [53.9, 81837.0], [54.0, 81837.0], [54.1, 81983.0], [54.2, 81983.0], [54.3, 82064.0], [54.4, 82064.0], [54.5, 82414.0], [54.6, 82414.0], [54.7, 82617.0], [54.8, 82617.0], [54.9, 82686.0], [55.0, 82686.0], [55.1, 82708.0], [55.2, 82708.0], [55.3, 82839.0], [55.4, 82839.0], [55.5, 83022.0], [55.6, 83022.0], [55.7, 83362.0], [55.8, 83362.0], [55.9, 83433.0], [56.0, 83433.0], [56.1, 83653.0], [56.2, 83653.0], [56.3, 83787.0], [56.4, 83787.0], [56.5, 84006.0], [56.6, 84006.0], [56.7, 84061.0], [56.8, 84061.0], [56.9, 84381.0], [57.0, 84381.0], [57.1, 84446.0], [57.2, 84446.0], [57.3, 84490.0], [57.4, 84490.0], [57.5, 84509.0], [57.6, 84509.0], [57.7, 84517.0], [57.8, 84517.0], [57.9, 84847.0], [58.0, 84847.0], [58.1, 84903.0], [58.2, 84903.0], [58.3, 85833.0], [58.4, 85833.0], [58.5, 86047.0], [58.6, 86047.0], [58.7, 86239.0], [58.8, 86239.0], [58.9, 86607.0], [59.0, 86607.0], [59.1, 86630.0], [59.2, 86630.0], [59.3, 86742.0], [59.4, 86742.0], [59.5, 86988.0], [59.6, 86988.0], [59.7, 87214.0], [59.8, 87214.0], [59.9, 87216.0], [60.0, 87216.0], [60.1, 87292.0], [60.2, 87292.0], [60.3, 87373.0], [60.4, 87373.0], [60.5, 87827.0], [60.6, 87827.0], [60.7, 87863.0], [60.8, 87863.0], [60.9, 87890.0], [61.0, 87890.0], [61.1, 88787.0], [61.2, 88787.0], [61.3, 89369.0], [61.4, 89369.0], [61.5, 90016.0], [61.6, 90016.0], [61.7, 90271.0], [61.8, 90271.0], [61.9, 90598.0], [62.0, 90598.0], [62.1, 90857.0], [62.2, 90857.0], [62.3, 90910.0], [62.4, 90910.0], [62.5, 91005.0], [62.6, 91005.0], [62.7, 91791.0], [62.8, 91791.0], [62.9, 92590.0], [63.0, 92590.0], [63.1, 92783.0], [63.2, 92783.0], [63.3, 92901.0], [63.4, 92901.0], [63.5, 92913.0], [63.6, 92913.0], [63.7, 93025.0], [63.8, 93025.0], [63.9, 94160.0], [64.0, 94160.0], [64.1, 94190.0], [64.2, 94190.0], [64.3, 94301.0], [64.4, 94301.0], [64.5, 94917.0], [64.6, 94917.0], [64.7, 94917.0], [64.8, 94917.0], [64.9, 94935.0], [65.0, 94935.0], [65.1, 95278.0], [65.2, 95278.0], [65.3, 95296.0], [65.4, 95296.0], [65.5, 95347.0], [65.6, 95347.0], [65.7, 95474.0], [65.8, 95474.0], [65.9, 95651.0], [66.0, 95651.0], [66.1, 95730.0], [66.2, 95730.0], [66.3, 95748.0], [66.4, 95748.0], [66.5, 96259.0], [66.6, 96259.0], [66.7, 96288.0], [66.8, 96288.0], [66.9, 96722.0], [67.0, 96722.0], [67.1, 97425.0], [67.2, 97425.0], [67.3, 97889.0], [67.4, 97889.0], [67.5, 97893.0], [67.6, 97893.0], [67.7, 97966.0], [67.8, 97966.0], [67.9, 98144.0], [68.0, 98144.0], [68.1, 98273.0], [68.2, 98273.0], [68.3, 98577.0], [68.4, 98577.0], [68.5, 98582.0], [68.6, 98582.0], [68.7, 98741.0], [68.8, 98741.0], [68.9, 99001.0], [69.0, 99001.0], [69.1, 99069.0], [69.2, 99069.0], [69.3, 99263.0], [69.4, 99263.0], [69.5, 99268.0], [69.6, 99268.0], [69.7, 100073.0], [69.8, 100073.0], [69.9, 100086.0], [70.0, 100086.0], [70.1, 100451.0], [70.2, 100451.0], [70.3, 100677.0], [70.4, 100677.0], [70.5, 100684.0], [70.6, 100684.0], [70.7, 100855.0], [70.8, 100855.0], [70.9, 100861.0], [71.0, 100861.0], [71.1, 101683.0], [71.2, 101683.0], [71.3, 101830.0], [71.4, 101830.0], [71.5, 102034.0], [71.6, 102034.0], [71.7, 102133.0], [71.8, 102133.0], [71.9, 102186.0], [72.0, 102186.0], [72.1, 102497.0], [72.2, 102497.0], [72.3, 102915.0], [72.4, 102915.0], [72.5, 103639.0], [72.6, 103639.0], [72.7, 103841.0], [72.8, 103841.0], [72.9, 103966.0], [73.0, 103966.0], [73.1, 103975.0], [73.2, 103975.0], [73.3, 104203.0], [73.4, 104203.0], [73.5, 104309.0], [73.6, 104309.0], [73.7, 104314.0], [73.8, 104314.0], [73.9, 104773.0], [74.0, 104773.0], [74.1, 105073.0], [74.2, 105073.0], [74.3, 105163.0], [74.4, 105163.0], [74.5, 105222.0], [74.6, 105222.0], [74.7, 105290.0], [74.8, 105290.0], [74.9, 105381.0], [75.0, 105381.0], [75.1, 105644.0], [75.2, 105644.0], [75.3, 105717.0], [75.4, 105717.0], [75.5, 105751.0], [75.6, 105751.0], [75.7, 105752.0], [75.8, 105752.0], [75.9, 106247.0], [76.0, 106247.0], [76.1, 106601.0], [76.2, 106601.0], [76.3, 106811.0], [76.4, 106811.0], [76.5, 106859.0], [76.6, 106859.0], [76.7, 107137.0], [76.8, 107137.0], [76.9, 107239.0], [77.0, 107239.0], [77.1, 108127.0], [77.2, 108127.0], [77.3, 108135.0], [77.4, 108135.0], [77.5, 108305.0], [77.6, 108305.0], [77.7, 108886.0], [77.8, 108886.0], [77.9, 108917.0], [78.0, 108917.0], [78.1, 108985.0], [78.2, 108985.0], [78.3, 109249.0], [78.4, 109249.0], [78.5, 109354.0], [78.6, 109354.0], [78.7, 109642.0], [78.8, 109642.0], [78.9, 109733.0], [79.0, 109733.0], [79.1, 110058.0], [79.2, 110058.0], [79.3, 110448.0], [79.4, 110448.0], [79.5, 110772.0], [79.6, 110772.0], [79.7, 110791.0], [79.8, 110791.0], [79.9, 110869.0], [80.0, 110869.0], [80.1, 111032.0], [80.2, 111032.0], [80.3, 111304.0], [80.4, 111304.0], [80.5, 111349.0], [80.6, 111349.0], [80.7, 111364.0], [80.8, 111364.0], [80.9, 111427.0], [81.0, 111427.0], [81.1, 111549.0], [81.2, 111549.0], [81.3, 112099.0], [81.4, 112099.0], [81.5, 112207.0], [81.6, 112207.0], [81.7, 112227.0], [81.8, 112227.0], [81.9, 112480.0], [82.0, 112480.0], [82.1, 112599.0], [82.2, 112599.0], [82.3, 112805.0], [82.4, 112805.0], [82.5, 113031.0], [82.6, 113031.0], [82.7, 113069.0], [82.8, 113069.0], [82.9, 113259.0], [83.0, 113259.0], [83.1, 113294.0], [83.2, 113294.0], [83.3, 113495.0], [83.4, 113495.0], [83.5, 113771.0], [83.6, 113771.0], [83.7, 113827.0], [83.8, 113827.0], [83.9, 113979.0], [84.0, 113979.0], [84.1, 114090.0], [84.2, 114090.0], [84.3, 114299.0], [84.4, 114299.0], [84.5, 114454.0], [84.6, 114454.0], [84.7, 114456.0], [84.8, 114456.0], [84.9, 114480.0], [85.0, 114480.0], [85.1, 114543.0], [85.2, 114543.0], [85.3, 114584.0], [85.4, 114584.0], [85.5, 115145.0], [85.6, 115145.0], [85.7, 115191.0], [85.8, 115191.0], [85.9, 115444.0], [86.0, 115444.0], [86.1, 115887.0], [86.2, 115887.0], [86.3, 116000.0], [86.4, 116000.0], [86.5, 116254.0], [86.6, 116254.0], [86.7, 116443.0], [86.8, 116443.0], [86.9, 116510.0], [87.0, 116510.0], [87.1, 116523.0], [87.2, 116523.0], [87.3, 116583.0], [87.4, 116583.0], [87.5, 116709.0], [87.6, 116709.0], [87.7, 116966.0], [87.8, 116966.0], [87.9, 117038.0], [88.0, 117038.0], [88.1, 117181.0], [88.2, 117181.0], [88.3, 117253.0], [88.4, 117253.0], [88.5, 117352.0], [88.6, 117352.0], [88.7, 117415.0], [88.8, 117415.0], [88.9, 117494.0], [89.0, 117494.0], [89.1, 117503.0], [89.2, 117503.0], [89.3, 117652.0], [89.4, 117652.0], [89.5, 117675.0], [89.6, 117675.0], [89.7, 117816.0], [89.8, 117816.0], [89.9, 117848.0], [90.0, 117848.0], [90.1, 118354.0], [90.2, 118354.0], [90.3, 118496.0], [90.4, 118496.0], [90.5, 118497.0], [90.6, 118497.0], [90.7, 118794.0], [90.8, 118794.0], [90.9, 118840.0], [91.0, 118840.0], [91.1, 119098.0], [91.2, 119098.0], [91.3, 119131.0], [91.4, 119131.0], [91.5, 119256.0], [91.6, 119256.0], [91.7, 119329.0], [91.8, 119329.0], [91.9, 119482.0], [92.0, 119482.0], [92.1, 119654.0], [92.2, 119654.0], [92.3, 119756.0], [92.4, 119756.0], [92.5, 119891.0], [92.6, 119891.0], [92.7, 119962.0], [92.8, 119962.0], [92.9, 120026.0], [93.0, 120026.0], [93.1, 120307.0], [93.2, 120307.0], [93.3, 120420.0], [93.4, 120420.0], [93.5, 120513.0], [93.6, 120513.0], [93.7, 120992.0], [93.8, 120992.0], [93.9, 121154.0], [94.0, 121154.0], [94.1, 121309.0], [94.2, 121309.0], [94.3, 121518.0], [94.4, 121518.0], [94.5, 121554.0], [94.6, 121554.0], [94.7, 121862.0], [94.8, 121862.0], [94.9, 122081.0], [95.0, 122081.0], [95.1, 122441.0], [95.2, 122441.0], [95.3, 122582.0], [95.4, 122582.0], [95.5, 122908.0], [95.6, 122908.0], [95.7, 122979.0], [95.8, 122979.0], [95.9, 123002.0], [96.0, 123002.0], [96.1, 123280.0], [96.2, 123280.0], [96.3, 123850.0], [96.4, 123850.0], [96.5, 124059.0], [96.6, 124059.0], [96.7, 124105.0], [96.8, 124105.0], [96.9, 124139.0], [97.0, 124139.0], [97.1, 124281.0], [97.2, 124281.0], [97.3, 124294.0], [97.4, 124294.0], [97.5, 124373.0], [97.6, 124373.0], [97.7, 124495.0], [97.8, 124495.0], [97.9, 124542.0], [98.0, 124542.0], [98.1, 124991.0], [98.2, 124991.0], [98.3, 125158.0], [98.4, 125158.0], [98.5, 125479.0], [98.6, 125479.0], [98.7, 125840.0], [98.8, 125840.0], [98.9, 126051.0], [99.0, 126051.0], [99.1, 126178.0], [99.2, 126178.0], [99.3, 126738.0], [99.4, 126738.0], [99.5, 126838.0], [99.6, 126838.0], [99.7, 127319.0], [99.8, 127319.0], [99.9, 128787.0], [100.0, 128787.0]], "isOverall": false, "label": "Zalando Home Page", "isController": false}, {"data": [[0.0, 437.0], [0.1, 437.0], [0.2, 1416.0], [0.3, 1416.0], [0.4, 3400.0], [0.5, 3400.0], [0.6, 3400.0], [0.7, 4808.0], [0.8, 6872.0], [0.9, 6872.0], [1.0, 7357.0], [1.1, 7357.0], [1.2, 7389.0], [1.3, 7389.0], [1.4, 7735.0], [1.5, 7735.0], [1.6, 8238.0], [1.7, 8238.0], [1.8, 8625.0], [1.9, 8625.0], [2.0, 8706.0], [2.1, 8706.0], [2.2, 8966.0], [2.3, 8966.0], [2.4, 9218.0], [2.5, 9218.0], [2.6, 9440.0], [2.7, 9440.0], [2.8, 9440.0], [2.9, 9689.0], [3.0, 9689.0], [3.1, 9834.0], [3.2, 9834.0], [3.3, 10002.0], [3.4, 10002.0], [3.5, 11098.0], [3.6, 11098.0], [3.7, 11207.0], [3.8, 11207.0], [3.9, 11406.0], [4.0, 11406.0], [4.1, 11441.0], [4.2, 11441.0], [4.3, 11870.0], [4.4, 11870.0], [4.5, 11885.0], [4.6, 11885.0], [4.7, 12038.0], [4.8, 12038.0], [4.9, 12168.0], [5.0, 12168.0], [5.1, 12252.0], [5.2, 12252.0], [5.3, 12722.0], [5.4, 12722.0], [5.5, 13103.0], [5.6, 13103.0], [5.7, 13689.0], [5.8, 13689.0], [5.9, 14095.0], [6.0, 14095.0], [6.1, 14408.0], [6.2, 14408.0], [6.3, 15026.0], [6.4, 15026.0], [6.5, 15278.0], [6.6, 15278.0], [6.7, 15393.0], [6.8, 15393.0], [6.9, 15420.0], [7.0, 15420.0], [7.1, 15421.0], [7.2, 15421.0], [7.3, 16194.0], [7.4, 16194.0], [7.5, 16247.0], [7.6, 16247.0], [7.7, 16280.0], [7.8, 16280.0], [7.9, 16483.0], [8.0, 16483.0], [8.1, 16748.0], [8.2, 16748.0], [8.3, 17177.0], [8.4, 17177.0], [8.5, 17280.0], [8.6, 17280.0], [8.7, 17352.0], [8.8, 18662.0], [8.9, 18662.0], [9.0, 19838.0], [9.1, 19838.0], [9.2, 20204.0], [9.3, 20204.0], [9.4, 20219.0], [9.5, 20219.0], [9.6, 20291.0], [9.7, 20291.0], [9.8, 20921.0], [9.9, 20921.0], [10.0, 21000.0], [10.1, 21000.0], [10.2, 21008.0], [10.3, 21008.0], [10.4, 21015.0], [10.5, 21015.0], [10.6, 21015.0], [10.7, 21015.0], [10.8, 21015.0], [10.9, 21015.0], [11.0, 21015.0], [11.1, 21015.0], [11.2, 21015.0], [11.3, 21015.0], [11.4, 21015.0], [11.5, 21015.0], [11.6, 21015.0], [11.7, 21015.0], [11.8, 21015.0], [11.9, 21015.0], [12.0, 21016.0], [12.1, 21016.0], [12.2, 21016.0], [12.3, 21016.0], [12.4, 21019.0], [12.5, 21019.0], [12.6, 21022.0], [12.7, 21022.0], [12.8, 21022.0], [12.9, 21022.0], [13.0, 21022.0], [13.1, 21022.0], [13.2, 21022.0], [13.3, 21022.0], [13.4, 21022.0], [13.5, 21022.0], [13.6, 21024.0], [13.7, 21024.0], [13.8, 21024.0], [13.9, 21024.0], [14.0, 21026.0], [14.1, 21026.0], [14.2, 21030.0], [14.3, 21030.0], [14.4, 21030.0], [14.5, 21030.0], [14.6, 21030.0], [14.7, 21030.0], [14.8, 21031.0], [14.9, 21031.0], [15.0, 21031.0], [15.1, 21031.0], [15.2, 21031.0], [15.3, 21031.0], [15.4, 21031.0], [15.5, 21031.0], [15.6, 21031.0], [15.7, 21031.0], [15.8, 21031.0], [15.9, 21031.0], [16.0, 21031.0], [16.1, 21031.0], [16.2, 21031.0], [16.3, 21031.0], [16.4, 21031.0], [16.5, 21031.0], [16.6, 21031.0], [16.7, 21031.0], [16.8, 21031.0], [16.9, 21031.0], [17.0, 21031.0], [17.1, 21031.0], [17.2, 21031.0], [17.3, 21031.0], [17.4, 21031.0], [17.5, 21031.0], [17.6, 21031.0], [17.7, 21031.0], [17.8, 21032.0], [17.9, 21032.0], [18.0, 21032.0], [18.1, 21032.0], [18.2, 21032.0], [18.3, 21032.0], [18.4, 21032.0], [18.5, 21032.0], [18.6, 21032.0], [18.7, 21032.0], [18.8, 21036.0], [18.9, 21036.0], [19.0, 21037.0], [19.1, 21037.0], [19.2, 21037.0], [19.3, 21037.0], [19.4, 21037.0], [19.5, 21037.0], [19.6, 21037.0], [19.7, 21037.0], [19.8, 21038.0], [19.9, 21038.0], [20.0, 21038.0], [20.1, 21038.0], [20.2, 21038.0], [20.3, 21038.0], [20.4, 21038.0], [20.5, 21038.0], [20.6, 21039.0], [20.7, 21039.0], [20.8, 21039.0], [20.9, 21039.0], [21.0, 21039.0], [21.1, 21039.0], [21.2, 21040.0], [21.3, 21040.0], [21.4, 21040.0], [21.5, 21040.0], [21.6, 21040.0], [21.7, 21040.0], [21.8, 21041.0], [21.9, 21041.0], [22.0, 21041.0], [22.1, 21041.0], [22.2, 21042.0], [22.3, 21042.0], [22.4, 21044.0], [22.5, 21044.0], [22.6, 21045.0], [22.7, 21045.0], [22.8, 21046.0], [22.9, 21046.0], [23.0, 21046.0], [23.1, 21046.0], [23.2, 21046.0], [23.3, 21046.0], [23.4, 21046.0], [23.5, 21046.0], [23.6, 21046.0], [23.7, 21046.0], [23.8, 21046.0], [23.9, 21046.0], [24.0, 21046.0], [24.1, 21046.0], [24.2, 21046.0], [24.3, 21046.0], [24.4, 21046.0], [24.5, 21046.0], [24.6, 21046.0], [24.7, 21046.0], [24.8, 21046.0], [24.9, 21046.0], [25.0, 21046.0], [25.1, 21046.0], [25.2, 21046.0], [25.3, 21046.0], [25.4, 21046.0], [25.5, 21046.0], [25.6, 21046.0], [25.7, 21046.0], [25.8, 21046.0], [25.9, 21046.0], [26.0, 21046.0], [26.1, 21046.0], [26.2, 21046.0], [26.3, 21046.0], [26.4, 21046.0], [26.5, 21046.0], [26.6, 21046.0], [26.7, 21046.0], [26.8, 21046.0], [26.9, 21046.0], [27.0, 21046.0], [27.1, 21046.0], [27.2, 21046.0], [27.3, 21046.0], [27.4, 21046.0], [27.5, 21046.0], [27.6, 21046.0], [27.7, 21046.0], [27.8, 21046.0], [27.9, 21046.0], [28.0, 21046.0], [28.1, 21046.0], [28.2, 21047.0], [28.3, 21047.0], [28.4, 21047.0], [28.5, 21047.0], [28.6, 21047.0], [28.7, 21047.0], [28.8, 21047.0], [28.9, 21047.0], [29.0, 21047.0], [29.1, 21047.0], [29.2, 21047.0], [29.3, 21047.0], [29.4, 21047.0], [29.5, 21047.0], [29.6, 21047.0], [29.7, 21047.0], [29.8, 21047.0], [29.9, 21047.0], [30.0, 21047.0], [30.1, 21047.0], [30.2, 21047.0], [30.3, 21047.0], [30.4, 21047.0], [30.5, 21047.0], [30.6, 21047.0], [30.7, 21047.0], [30.8, 21047.0], [30.9, 21047.0], [31.0, 21047.0], [31.1, 21047.0], [31.2, 21047.0], [31.3, 21047.0], [31.4, 21047.0], [31.5, 21047.0], [31.6, 21047.0], [31.7, 21047.0], [31.8, 21047.0], [31.9, 21047.0], [32.0, 21047.0], [32.1, 21047.0], [32.2, 21047.0], [32.3, 21047.0], [32.4, 21047.0], [32.5, 21047.0], [32.6, 21047.0], [32.7, 21047.0], [32.8, 21047.0], [32.9, 21047.0], [33.0, 21047.0], [33.1, 21047.0], [33.2, 21047.0], [33.3, 21047.0], [33.4, 21047.0], [33.5, 21047.0], [33.6, 21047.0], [33.7, 21047.0], [33.8, 21047.0], [33.9, 21047.0], [34.0, 21047.0], [34.1, 21047.0], [34.2, 21047.0], [34.3, 21047.0], [34.4, 21047.0], [34.5, 21047.0], [34.6, 21047.0], [34.7, 21047.0], [34.8, 21047.0], [34.9, 21047.0], [35.0, 21048.0], [35.1, 21048.0], [35.2, 21048.0], [35.3, 21048.0], [35.4, 21048.0], [35.5, 21048.0], [35.6, 21048.0], [35.7, 21048.0], [35.8, 21051.0], [35.9, 21051.0], [36.0, 21052.0], [36.1, 21052.0], [36.2, 21053.0], [36.3, 21053.0], [36.4, 21053.0], [36.5, 21053.0], [36.6, 21053.0], [36.7, 21053.0], [36.8, 21053.0], [36.9, 21053.0], [37.0, 21053.0], [37.1, 21053.0], [37.2, 21054.0], [37.3, 21054.0], [37.4, 21054.0], [37.5, 21054.0], [37.6, 21055.0], [37.7, 21055.0], [37.8, 21055.0], [37.9, 21055.0], [38.0, 21055.0], [38.1, 21055.0], [38.2, 21056.0], [38.3, 21056.0], [38.4, 21057.0], [38.5, 21057.0], [38.6, 21057.0], [38.7, 21057.0], [38.8, 21060.0], [38.9, 21060.0], [39.0, 21061.0], [39.1, 21061.0], [39.2, 21061.0], [39.3, 21061.0], [39.4, 21061.0], [39.5, 21061.0], [39.6, 21061.0], [39.7, 21061.0], [39.8, 21061.0], [39.9, 21061.0], [40.0, 21061.0], [40.1, 21061.0], [40.2, 21062.0], [40.3, 21062.0], [40.4, 21062.0], [40.5, 21062.0], [40.6, 21062.0], [40.7, 21062.0], [40.8, 21062.0], [40.9, 21062.0], [41.0, 21062.0], [41.1, 21062.0], [41.2, 21062.0], [41.3, 21062.0], [41.4, 21062.0], [41.5, 21062.0], [41.6, 21062.0], [41.7, 21062.0], [41.8, 21062.0], [41.9, 21062.0], [42.0, 21062.0], [42.1, 21062.0], [42.2, 21062.0], [42.3, 21062.0], [42.4, 21062.0], [42.5, 21062.0], [42.6, 21062.0], [42.7, 21062.0], [42.8, 21062.0], [42.9, 21062.0], [43.0, 21062.0], [43.1, 21062.0], [43.2, 21062.0], [43.3, 21062.0], [43.4, 21062.0], [43.5, 21062.0], [43.6, 21062.0], [43.7, 21062.0], [43.8, 21062.0], [43.9, 21062.0], [44.0, 21062.0], [44.1, 21062.0], [44.2, 21062.0], [44.3, 21062.0], [44.4, 21062.0], [44.5, 21062.0], [44.6, 21062.0], [44.7, 21062.0], [44.8, 21062.0], [44.9, 21062.0], [45.0, 21062.0], [45.1, 21062.0], [45.2, 21062.0], [45.3, 21062.0], [45.4, 21062.0], [45.5, 21062.0], [45.6, 21062.0], [45.7, 21062.0], [45.8, 21062.0], [45.9, 21062.0], [46.0, 21062.0], [46.1, 21062.0], [46.2, 21062.0], [46.3, 21062.0], [46.4, 21062.0], [46.5, 21062.0], [46.6, 21062.0], [46.7, 21062.0], [46.8, 21062.0], [46.9, 21063.0], [47.0, 21063.0], [47.1, 21063.0], [47.2, 21063.0], [47.3, 21063.0], [47.4, 21063.0], [47.5, 21063.0], [47.6, 21063.0], [47.7, 21063.0], [47.8, 21063.0], [47.9, 21063.0], [48.0, 21063.0], [48.1, 21063.0], [48.2, 21064.0], [48.3, 21064.0], [48.4, 21064.0], [48.5, 21067.0], [48.6, 21067.0], [48.7, 21067.0], [48.8, 21067.0], [48.9, 21068.0], [49.0, 21068.0], [49.1, 21069.0], [49.2, 21069.0], [49.3, 21070.0], [49.4, 21070.0], [49.5, 21071.0], [49.6, 21071.0], [49.7, 21071.0], [49.8, 21071.0], [49.9, 21076.0], [50.0, 21076.0], [50.1, 21076.0], [50.2, 21076.0], [50.3, 21077.0], [50.4, 21077.0], [50.5, 21077.0], [50.6, 21077.0], [50.7, 21077.0], [50.8, 21077.0], [50.9, 21077.0], [51.0, 21077.0], [51.1, 21078.0], [51.2, 21078.0], [51.3, 21078.0], [51.4, 21078.0], [51.5, 21079.0], [51.6, 21079.0], [51.7, 21079.0], [51.8, 21079.0], [51.9, 21080.0], [52.0, 21080.0], [52.1, 21086.0], [52.2, 21086.0], [52.3, 21088.0], [52.4, 21088.0], [52.5, 21093.0], [52.6, 21093.0], [52.7, 21093.0], [52.8, 21093.0], [52.9, 21094.0], [53.0, 21094.0], [53.1, 21118.0], [53.2, 21118.0], [53.3, 21198.0], [53.4, 21198.0], [53.5, 21271.0], [53.6, 21271.0], [53.7, 21307.0], [53.8, 21307.0], [53.9, 21549.0], [54.0, 21549.0], [54.1, 21579.0], [54.2, 21579.0], [54.3, 21598.0], [54.4, 21598.0], [54.5, 21703.0], [54.6, 21703.0], [54.7, 21703.0], [54.8, 21703.0], [54.9, 21734.0], [55.0, 21734.0], [55.1, 21766.0], [55.2, 21766.0], [55.3, 21920.0], [55.4, 21920.0], [55.5, 22236.0], [55.6, 22236.0], [55.7, 22809.0], [55.8, 22809.0], [55.9, 22913.0], [56.0, 22913.0], [56.1, 23136.0], [56.2, 23136.0], [56.3, 23359.0], [56.4, 23359.0], [56.5, 23642.0], [56.6, 23642.0], [56.7, 24492.0], [56.8, 24492.0], [56.9, 24613.0], [57.0, 24613.0], [57.1, 24705.0], [57.2, 24705.0], [57.3, 25040.0], [57.4, 25040.0], [57.5, 25385.0], [57.6, 25385.0], [57.7, 25416.0], [57.8, 25416.0], [57.9, 25470.0], [58.0, 25470.0], [58.1, 25626.0], [58.2, 25626.0], [58.3, 25635.0], [58.4, 25635.0], [58.5, 25705.0], [58.6, 25705.0], [58.7, 25859.0], [58.8, 25859.0], [58.9, 25889.0], [59.0, 25889.0], [59.1, 25907.0], [59.2, 25907.0], [59.3, 26163.0], [59.4, 26163.0], [59.5, 26262.0], [59.6, 26262.0], [59.7, 26656.0], [59.8, 26656.0], [59.9, 26764.0], [60.0, 26764.0], [60.1, 26849.0], [60.2, 26849.0], [60.3, 26967.0], [60.4, 26967.0], [60.5, 27047.0], [60.6, 27047.0], [60.7, 27118.0], [60.8, 27118.0], [60.9, 27198.0], [61.0, 27198.0], [61.1, 27298.0], [61.2, 27298.0], [61.3, 27400.0], [61.4, 27400.0], [61.5, 27537.0], [61.6, 27537.0], [61.7, 27597.0], [61.8, 27597.0], [61.9, 27618.0], [62.0, 27618.0], [62.1, 27621.0], [62.2, 27621.0], [62.3, 27641.0], [62.4, 27641.0], [62.5, 27818.0], [62.6, 27818.0], [62.7, 27971.0], [62.8, 27971.0], [62.9, 28086.0], [63.0, 28086.0], [63.1, 28164.0], [63.2, 28164.0], [63.3, 28175.0], [63.4, 28175.0], [63.5, 28444.0], [63.6, 28444.0], [63.7, 28460.0], [63.8, 28460.0], [63.9, 28477.0], [64.0, 28477.0], [64.1, 28535.0], [64.2, 28535.0], [64.3, 28583.0], [64.4, 28583.0], [64.5, 28696.0], [64.6, 28696.0], [64.7, 28742.0], [64.8, 28742.0], [64.9, 28782.0], [65.0, 28782.0], [65.1, 28850.0], [65.2, 28850.0], [65.3, 28852.0], [65.4, 28852.0], [65.5, 29024.0], [65.6, 29024.0], [65.7, 29318.0], [65.8, 29318.0], [65.9, 29391.0], [66.0, 29391.0], [66.1, 29503.0], [66.2, 29503.0], [66.3, 29551.0], [66.4, 29551.0], [66.5, 29621.0], [66.6, 29621.0], [66.7, 29685.0], [66.8, 29685.0], [66.9, 29727.0], [67.0, 29727.0], [67.1, 29753.0], [67.2, 29753.0], [67.3, 29823.0], [67.4, 29823.0], [67.5, 29842.0], [67.6, 29842.0], [67.7, 29878.0], [67.8, 29878.0], [67.9, 29936.0], [68.0, 29936.0], [68.1, 29958.0], [68.2, 29958.0], [68.3, 29960.0], [68.4, 29960.0], [68.5, 30063.0], [68.6, 30063.0], [68.7, 30076.0], [68.8, 30076.0], [68.9, 30080.0], [69.0, 30080.0], [69.1, 30097.0], [69.2, 30097.0], [69.3, 30105.0], [69.4, 30105.0], [69.5, 30112.0], [69.6, 30112.0], [69.7, 30193.0], [69.8, 30193.0], [69.9, 30196.0], [70.0, 30196.0], [70.1, 30240.0], [70.2, 30240.0], [70.3, 30280.0], [70.4, 30280.0], [70.5, 30295.0], [70.6, 30295.0], [70.7, 30299.0], [70.8, 30299.0], [70.9, 30369.0], [71.0, 30369.0], [71.1, 30435.0], [71.2, 30435.0], [71.3, 30441.0], [71.4, 30441.0], [71.5, 30477.0], [71.6, 30477.0], [71.7, 30590.0], [71.8, 30590.0], [71.9, 30650.0], [72.0, 30650.0], [72.1, 30672.0], [72.2, 30672.0], [72.3, 31103.0], [72.4, 31103.0], [72.5, 31437.0], [72.6, 31437.0], [72.7, 31458.0], [72.8, 31458.0], [72.9, 31494.0], [73.0, 31494.0], [73.1, 31528.0], [73.2, 31528.0], [73.3, 31788.0], [73.4, 31788.0], [73.5, 31812.0], [73.6, 31812.0], [73.7, 31939.0], [73.8, 31939.0], [73.9, 31971.0], [74.0, 31971.0], [74.1, 32084.0], [74.2, 32084.0], [74.3, 32386.0], [74.4, 32386.0], [74.5, 32506.0], [74.6, 32506.0], [74.7, 32537.0], [74.8, 32537.0], [74.9, 32647.0], [75.0, 32647.0], [75.1, 32687.0], [75.2, 32687.0], [75.3, 32687.0], [75.4, 32687.0], [75.5, 32818.0], [75.6, 32818.0], [75.7, 32885.0], [75.8, 32885.0], [75.9, 32939.0], [76.0, 32939.0], [76.1, 32952.0], [76.2, 32952.0], [76.3, 32970.0], [76.4, 32970.0], [76.5, 33015.0], [76.6, 33015.0], [76.7, 33094.0], [76.8, 33094.0], [76.9, 33189.0], [77.0, 33189.0], [77.1, 33240.0], [77.2, 33240.0], [77.3, 33267.0], [77.4, 33267.0], [77.5, 33409.0], [77.6, 33409.0], [77.7, 33768.0], [77.8, 33768.0], [77.9, 34065.0], [78.0, 34065.0], [78.1, 34128.0], [78.2, 34128.0], [78.3, 34155.0], [78.4, 34155.0], [78.5, 34159.0], [78.6, 34159.0], [78.7, 34195.0], [78.8, 34195.0], [78.9, 34224.0], [79.0, 34224.0], [79.1, 34294.0], [79.2, 34294.0], [79.3, 34413.0], [79.4, 34413.0], [79.5, 34459.0], [79.6, 34459.0], [79.7, 34491.0], [79.8, 34491.0], [79.9, 34497.0], [80.0, 34497.0], [80.1, 34512.0], [80.2, 34512.0], [80.3, 34712.0], [80.4, 34712.0], [80.5, 34834.0], [80.6, 34834.0], [80.7, 35115.0], [80.8, 35115.0], [80.9, 35147.0], [81.0, 35147.0], [81.1, 35203.0], [81.2, 35203.0], [81.3, 35320.0], [81.4, 35320.0], [81.5, 35445.0], [81.6, 35445.0], [81.7, 35574.0], [81.8, 35574.0], [81.9, 35591.0], [82.0, 35591.0], [82.1, 35845.0], [82.2, 35845.0], [82.3, 36235.0], [82.4, 36235.0], [82.5, 36260.0], [82.6, 36260.0], [82.7, 36403.0], [82.8, 36403.0], [82.9, 36581.0], [83.0, 36581.0], [83.1, 36750.0], [83.2, 36750.0], [83.3, 36775.0], [83.4, 36775.0], [83.5, 36818.0], [83.6, 36818.0], [83.7, 37128.0], [83.8, 37128.0], [83.9, 37496.0], [84.0, 37496.0], [84.1, 38074.0], [84.2, 38074.0], [84.3, 38135.0], [84.4, 38135.0], [84.5, 38171.0], [84.6, 38171.0], [84.7, 38471.0], [84.8, 38471.0], [84.9, 38556.0], [85.0, 38556.0], [85.1, 38556.0], [85.2, 38556.0], [85.3, 38569.0], [85.4, 38569.0], [85.5, 38614.0], [85.6, 38614.0], [85.7, 38745.0], [85.8, 38745.0], [85.9, 38830.0], [86.0, 38830.0], [86.1, 38864.0], [86.2, 38864.0], [86.3, 38969.0], [86.4, 38969.0], [86.5, 39085.0], [86.6, 39085.0], [86.7, 39246.0], [86.8, 39246.0], [86.9, 39621.0], [87.0, 39621.0], [87.1, 39648.0], [87.2, 39648.0], [87.3, 39770.0], [87.4, 39770.0], [87.5, 39842.0], [87.6, 39842.0], [87.7, 39903.0], [87.8, 39903.0], [87.9, 39932.0], [88.0, 39932.0], [88.1, 40106.0], [88.2, 40106.0], [88.3, 40140.0], [88.4, 40140.0], [88.5, 40484.0], [88.6, 40484.0], [88.7, 41139.0], [88.8, 41139.0], [88.9, 41881.0], [89.0, 41881.0], [89.1, 42296.0], [89.2, 42296.0], [89.3, 42312.0], [89.4, 42312.0], [89.5, 42354.0], [89.6, 42354.0], [89.7, 42442.0], [89.8, 42442.0], [89.9, 42661.0], [90.0, 42661.0], [90.1, 42946.0], [90.2, 42946.0], [90.3, 42981.0], [90.4, 42981.0], [90.5, 43685.0], [90.6, 43685.0], [90.7, 43743.0], [90.8, 43743.0], [90.9, 44010.0], [91.0, 44010.0], [91.1, 44262.0], [91.2, 44262.0], [91.3, 44262.0], [91.4, 44262.0], [91.5, 45219.0], [91.6, 45219.0], [91.7, 45512.0], [91.8, 45512.0], [91.9, 45675.0], [92.0, 45675.0], [92.1, 45828.0], [92.2, 45828.0], [92.3, 45878.0], [92.4, 45878.0], [92.5, 46958.0], [92.6, 46958.0], [92.7, 47300.0], [92.8, 47300.0], [92.9, 47765.0], [93.0, 47765.0], [93.1, 48895.0], [93.2, 48895.0], [93.3, 49107.0], [93.4, 49107.0], [93.5, 49141.0], [93.6, 49141.0], [93.7, 50342.0], [93.8, 50342.0], [93.9, 51593.0], [94.0, 51593.0], [94.1, 51695.0], [94.2, 51695.0], [94.3, 51886.0], [94.4, 51886.0], [94.5, 51970.0], [94.6, 51970.0], [94.7, 52156.0], [94.8, 52156.0], [94.9, 52326.0], [95.0, 52326.0], [95.1, 52684.0], [95.2, 52684.0], [95.3, 52799.0], [95.4, 52799.0], [95.5, 53110.0], [95.6, 53110.0], [95.7, 53915.0], [95.8, 53915.0], [95.9, 54629.0], [96.0, 54629.0], [96.1, 56483.0], [96.2, 56483.0], [96.3, 57455.0], [96.4, 57455.0], [96.5, 57808.0], [96.6, 57808.0], [96.7, 57881.0], [96.8, 57881.0], [96.9, 58259.0], [97.0, 58259.0], [97.1, 59309.0], [97.2, 59309.0], [97.3, 60920.0], [97.4, 60920.0], [97.5, 62358.0], [97.6, 62358.0], [97.7, 64546.0], [97.8, 64546.0], [97.9, 66162.0], [98.0, 66162.0], [98.1, 66566.0], [98.2, 66566.0], [98.3, 67212.0], [98.4, 67212.0], [98.5, 68286.0], [98.6, 68286.0], [98.7, 71266.0], [98.8, 71266.0], [98.9, 72862.0], [99.0, 72862.0], [99.1, 74836.0], [99.2, 74836.0], [99.3, 75848.0], [99.4, 75848.0], [99.5, 78161.0], [99.6, 78161.0], [99.7, 79161.0], [99.8, 79161.0], [99.9, 111290.0], [100.0, 111290.0]], "isOverall": false, "label": "Search for jeans", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 215.0, "series": [{"data": [[68300.0, 1.0], [74700.0, 1.0], [77900.0, 2.0], [82700.0, 1.0], [84300.0, 1.0], [98700.0, 1.0], [105100.0, 1.0], [108300.0, 1.0], [111500.0, 1.0], [121100.0, 1.0], [124300.0, 1.0], [33700.0, 1.0], [35300.0, 2.0], [38500.0, 2.0], [40100.0, 1.0], [41700.0, 1.0], [48100.0, 2.0], [50500.0, 1.0], [54500.0, 1.0], [56900.0, 1.0], [59300.0, 1.0], [63300.0, 3.0], [67400.0, 1.0], [70600.0, 1.0], [77000.0, 1.0], [81800.0, 1.0], [78600.0, 1.0], [83400.0, 1.0], [86600.0, 2.0], [93000.0, 1.0], [96200.0, 2.0], [97800.0, 2.0], [104200.0, 1.0], [113800.0, 1.0], [112200.0, 2.0], [117000.0, 1.0], [115400.0, 1.0], [121800.0, 1.0], [68100.0, 1.0], [71300.0, 1.0], [76100.0, 1.0], [77700.0, 1.0], [80900.0, 2.0], [79300.0, 1.0], [87300.0, 1.0], [90500.0, 1.0], [95300.0, 1.0], [98500.0, 2.0], [108100.0, 2.0], [109700.0, 1.0], [114500.0, 2.0], [111300.0, 3.0], [120900.0, 1.0], [122500.0, 1.0], [119300.0, 1.0], [124100.0, 2.0], [127300.0, 1.0], [25200.0, 1.0], [26000.0, 1.0], [26400.0, 1.0], [27200.0, 2.0], [28400.0, 1.0], [29200.0, 1.0], [29600.0, 1.0], [32000.0, 1.0], [36800.0, 1.0], [36000.0, 1.0], [38400.0, 1.0], [40000.0, 1.0], [41600.0, 2.0], [48000.0, 2.0], [50400.0, 1.0], [52000.0, 1.0], [54400.0, 1.0], [56800.0, 2.0], [59200.0, 1.0], [60000.0, 2.0], [61600.0, 1.0], [62400.0, 1.0], [64000.0, 2.0], [70400.0, 1.0], [72000.0, 1.0], [73600.0, 1.0], [75200.0, 1.0], [76800.0, 2.0], [78400.0, 1.0], [80000.0, 1.0], [84800.0, 1.0], [99200.0, 2.0], [100800.0, 2.0], [102400.0, 1.0], [105600.0, 1.0], [107200.0, 1.0], [108800.0, 1.0], [110400.0, 1.0], [112000.0, 1.0], [118400.0, 2.0], [120000.0, 1.0], [123200.0, 1.0], [67100.0, 2.0], [70300.0, 1.0], [81500.0, 1.0], [79900.0, 1.0], [92700.0, 1.0], [94300.0, 1.0], [103900.0, 2.0], [107100.0, 1.0], [115100.0, 2.0], [118300.0, 1.0], [116700.0, 1.0], [121500.0, 2.0], [119900.0, 1.0], [33100.0, 3.0], [35500.0, 1.0], [37900.0, 1.0], [38700.0, 1.0], [42700.0, 1.0], [41100.0, 1.0], [53900.0, 1.0], [54700.0, 1.0], [59500.0, 1.0], [61100.0, 1.0], [61900.0, 1.0], [64300.0, 1.0], [67800.0, 1.0], [66200.0, 1.0], [69400.0, 1.0], [77400.0, 1.0], [80600.0, 2.0], [90200.0, 1.0], [98200.0, 1.0], [106200.0, 1.0], [114200.0, 1.0], [111000.0, 1.0], [117400.0, 2.0], [115800.0, 1.0], [119000.0, 1.0], [123800.0, 1.0], [125400.0, 1.0], [68500.0, 1.0], [84500.0, 2.0], [89300.0, 1.0], [90900.0, 1.0], [92500.0, 1.0], [94100.0, 2.0], [95700.0, 2.0], [102100.0, 2.0], [105300.0, 1.0], [116500.0, 3.0], [119700.0, 1.0], [121300.0, 1.0], [122900.0, 2.0], [124500.0, 1.0], [126100.0, 1.0], [25300.0, 1.0], [26500.0, 2.0], [26100.0, 1.0], [28500.0, 1.0], [28100.0, 1.0], [29700.0, 2.0], [30900.0, 1.0], [32100.0, 1.0], [32500.0, 1.0], [33000.0, 1.0], [38600.0, 1.0], [39400.0, 1.0], [43400.0, 1.0], [44200.0, 1.0], [45000.0, 1.0], [51400.0, 1.0], [52200.0, 1.0], [54600.0, 1.0], [56200.0, 2.0], [58600.0, 1.0], [60200.0, 2.0], [61800.0, 2.0], [64200.0, 1.0], [66000.0, 1.0], [67600.0, 2.0], [70800.0, 1.0], [74000.0, 1.0], [78800.0, 1.0], [82000.0, 1.0], [83600.0, 1.0], [90000.0, 1.0], [109200.0, 1.0], [112400.0, 1.0], [110800.0, 1.0], [114000.0, 1.0], [117200.0, 1.0], [122000.0, 1.0], [118800.0, 1.0], [120400.0, 1.0], [126800.0, 1.0], [67500.0, 1.0], [69100.0, 2.0], [65900.0, 1.0], [72300.0, 1.0], [73900.0, 1.0], [81900.0, 1.0], [86700.0, 1.0], [97900.0, 1.0], [104300.0, 2.0], [110700.0, 2.0], [113900.0, 1.0], [117100.0, 1.0], [118700.0, 1.0], [120300.0, 1.0], [125100.0, 1.0], [126700.0, 1.0], [33300.0, 1.0], [37300.0, 1.0], [39700.0, 1.0], [42900.0, 1.0], [50100.0, 1.0], [50900.0, 1.0], [52500.0, 2.0], [54900.0, 1.0], [54100.0, 2.0], [55700.0, 1.0], [58100.0, 3.0], [60500.0, 1.0], [61300.0, 1.0], [62900.0, 1.0], [65300.0, 2.0], [63700.0, 2.0], [64500.0, 2.0], [71400.0, 2.0], [79400.0, 3.0], [82600.0, 2.0], [85800.0, 1.0], [95400.0, 1.0], [101800.0, 1.0], [105000.0, 1.0], [106600.0, 1.0], [113000.0, 2.0], [111400.0, 1.0], [116200.0, 1.0], [117800.0, 2.0], [119400.0, 1.0], [124200.0, 2.0], [125800.0, 1.0], [67300.0, 1.0], [78500.0, 1.0], [81700.0, 2.0], [80100.0, 1.0], [83300.0, 1.0], [84900.0, 1.0], [92900.0, 2.0], [105700.0, 3.0], [108900.0, 2.0], [113700.0, 1.0], [116900.0, 1.0], [124900.0, 1.0], [21400.0, 1.0], [22600.0, 1.0], [26200.0, 1.0], [27000.0, 3.0], [29000.0, 1.0], [29800.0, 1.0], [31000.0, 1.0], [32200.0, 1.0], [34000.0, 2.0], [36400.0, 1.0], [38000.0, 1.0], [44400.0, 1.0], [46800.0, 1.0], [48400.0, 1.0], [53200.0, 1.0], [54800.0, 2.0], [59600.0, 1.0], [61200.0, 2.0], [62000.0, 1.0], [65200.0, 1.0], [68000.0, 1.0], [69600.0, 2.0], [71200.0, 1.0], [84000.0, 2.0], [82400.0, 1.0], [87200.0, 3.0], [95200.0, 2.0], [100000.0, 2.0], [101600.0, 1.0], [109600.0, 1.0], [114400.0, 3.0], [112800.0, 1.0], [116000.0, 1.0], [117600.0, 2.0], [119200.0, 1.0], [122400.0, 1.0], [124000.0, 1.0], [69500.0, 1.0], [71100.0, 1.0], [72700.0, 2.0], [80700.0, 2.0], [88700.0, 1.0], [96700.0, 1.0], [104700.0, 1.0], [117500.0, 1.0], [119100.0, 1.0], [128700.0, 1.0], [33500.0, 1.0], [34300.0, 1.0], [36700.0, 1.0], [38300.0, 1.0], [37500.0, 1.0], [42300.0, 1.0], [43100.0, 1.0], [47100.0, 1.0], [48700.0, 1.0], [50300.0, 1.0], [49500.0, 1.0], [52700.0, 2.0], [53500.0, 1.0], [57500.0, 2.0], [59900.0, 1.0], [61500.0, 1.0], [63100.0, 2.0], [64700.0, 1.0], [73400.0, 1.0], [75000.0, 2.0], [81400.0, 2.0], [83000.0, 1.0], [86200.0, 1.0], [87800.0, 3.0], [91000.0, 1.0], [97400.0, 1.0], [100600.0, 2.0], [99000.0, 2.0], [103800.0, 1.0], [113400.0, 1.0], [119800.0, 1.0], [123000.0, 1.0], [67700.0, 1.0], [72500.0, 1.0], [75700.0, 2.0], [80500.0, 1.0], [83700.0, 1.0], [86900.0, 1.0], [91700.0, 1.0], [94900.0, 3.0], [98100.0, 1.0], [102900.0, 1.0], [109300.0, 1.0], [112500.0, 1.0], [117300.0, 1.0], [120500.0, 1.0], [23900.0, 1.0], [25500.0, 1.0], [26300.0, 3.0], [26700.0, 2.0], [27500.0, 1.0], [27100.0, 1.0], [28300.0, 1.0], [29900.0, 1.0], [32300.0, 2.0], [31900.0, 1.0], [44600.0, 1.0], [43800.0, 1.0], [48600.0, 1.0], [50200.0, 1.0], [51000.0, 1.0], [51800.0, 1.0], [54200.0, 3.0], [56600.0, 1.0], [58200.0, 1.0], [59000.0, 1.0], [61400.0, 1.0], [62200.0, 2.0], [63000.0, 1.0], [65400.0, 1.0], [68400.0, 1.0], [73200.0, 1.0], [79600.0, 2.0], [84400.0, 2.0], [86000.0, 1.0], [82800.0, 1.0], [90800.0, 1.0], [95600.0, 1.0], [102000.0, 1.0], [100400.0, 1.0], [105200.0, 2.0], [103600.0, 1.0], [106800.0, 2.0], [110000.0, 1.0], [113200.0, 2.0], [116400.0, 1.0], [119600.0, 1.0], [124400.0, 1.0], [126000.0, 1.0]], "isOverall": false, "label": "Zalando Home Page", "isController": false}, {"data": [[34500.0, 1.0], [32900.0, 3.0], [34100.0, 4.0], [33700.0, 1.0], [35300.0, 1.0], [36500.0, 1.0], [38500.0, 3.0], [38100.0, 2.0], [38900.0, 1.0], [40100.0, 2.0], [39700.0, 1.0], [42900.0, 2.0], [43700.0, 1.0], [46900.0, 1.0], [47700.0, 1.0], [47300.0, 1.0], [52100.0, 1.0], [59300.0, 1.0], [60900.0, 1.0], [64500.0, 1.0], [68200.0, 1.0], [400.0, 1.0], [1400.0, 1.0], [3400.0, 1.0], [66500.0, 1.0], [4800.0, 1.0], [6800.0, 1.0], [7300.0, 2.0], [7700.0, 1.0], [8700.0, 1.0], [8600.0, 1.0], [8200.0, 1.0], [8900.0, 1.0], [9200.0, 1.0], [9600.0, 1.0], [9400.0, 1.0], [9800.0, 1.0], [10000.0, 1.0], [11200.0, 1.0], [11000.0, 1.0], [11400.0, 2.0], [12200.0, 1.0], [11800.0, 2.0], [12100.0, 1.0], [12000.0, 1.0], [12700.0, 1.0], [13100.0, 1.0], [13600.0, 1.0], [14000.0, 1.0], [14400.0, 1.0], [15000.0, 1.0], [15200.0, 1.0], [15300.0, 1.0], [15400.0, 2.0], [16200.0, 2.0], [16100.0, 1.0], [17200.0, 1.0], [16400.0, 1.0], [18600.0, 1.0], [20200.0, 3.0], [19800.0, 1.0], [21000.0, 215.0], [21200.0, 1.0], [22200.0, 1.0], [22800.0, 1.0], [23600.0, 1.0], [24400.0, 1.0], [24600.0, 1.0], [25400.0, 2.0], [25000.0, 1.0], [25600.0, 2.0], [26200.0, 1.0], [26600.0, 1.0], [25800.0, 2.0], [27000.0, 1.0], [27200.0, 1.0], [27600.0, 3.0], [26800.0, 1.0], [27400.0, 1.0], [28600.0, 1.0], [28000.0, 1.0], [27800.0, 1.0], [28400.0, 3.0], [29000.0, 1.0], [29600.0, 2.0], [28800.0, 2.0], [30000.0, 4.0], [30400.0, 3.0], [30200.0, 4.0], [30600.0, 2.0], [29800.0, 3.0], [31400.0, 3.0], [32600.0, 3.0], [31800.0, 1.0], [32000.0, 1.0], [34400.0, 4.0], [32800.0, 2.0], [34800.0, 1.0], [34000.0, 1.0], [33200.0, 2.0], [36400.0, 1.0], [35200.0, 1.0], [36800.0, 1.0], [38800.0, 2.0], [38400.0, 1.0], [38000.0, 1.0], [39600.0, 2.0], [40400.0, 1.0], [39200.0, 1.0], [42400.0, 1.0], [44000.0, 1.0], [43600.0, 1.0], [45200.0, 1.0], [45600.0, 1.0], [48800.0, 1.0], [51600.0, 1.0], [56400.0, 1.0], [67200.0, 1.0], [71200.0, 1.0], [72800.0, 1.0], [111200.0, 1.0], [79100.0, 1.0], [33100.0, 1.0], [34700.0, 1.0], [35100.0, 2.0], [35500.0, 2.0], [36700.0, 2.0], [38700.0, 1.0], [37100.0, 1.0], [39900.0, 2.0], [41100.0, 1.0], [42300.0, 2.0], [45500.0, 1.0], [49100.0, 2.0], [50300.0, 1.0], [52700.0, 1.0], [53100.0, 1.0], [51500.0, 1.0], [51900.0, 1.0], [52300.0, 1.0], [53900.0, 1.0], [62300.0, 1.0], [75800.0, 1.0], [66100.0, 1.0], [78100.0, 1.0], [17100.0, 1.0], [17300.0, 1.0], [16700.0, 1.0], [21500.0, 3.0], [20900.0, 1.0], [21300.0, 1.0], [21100.0, 2.0], [21900.0, 1.0], [21700.0, 4.0], [23100.0, 1.0], [23300.0, 1.0], [22900.0, 1.0], [24700.0, 1.0], [25300.0, 1.0], [25900.0, 1.0], [26100.0, 1.0], [25700.0, 1.0], [26700.0, 1.0], [27500.0, 2.0], [26900.0, 1.0], [27100.0, 2.0], [28100.0, 2.0], [28500.0, 2.0], [27900.0, 1.0], [29300.0, 2.0], [28700.0, 2.0], [29500.0, 2.0], [29700.0, 2.0], [30100.0, 4.0], [29900.0, 3.0], [30500.0, 1.0], [30300.0, 1.0], [31700.0, 1.0], [31100.0, 1.0], [31500.0, 1.0], [32500.0, 2.0], [32300.0, 1.0], [31900.0, 2.0], [34200.0, 2.0], [33400.0, 1.0], [33000.0, 2.0], [35800.0, 1.0], [35400.0, 1.0], [36200.0, 2.0], [38600.0, 1.0], [37400.0, 1.0], [39000.0, 1.0], [39800.0, 1.0], [42600.0, 1.0], [42200.0, 1.0], [41800.0, 1.0], [44200.0, 2.0], [45800.0, 2.0], [52600.0, 1.0], [51800.0, 1.0], [54600.0, 1.0], [57800.0, 2.0], [58200.0, 1.0], [57400.0, 1.0], [74800.0, 1.0]], "isOverall": false, "label": "Search for jeans", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 128700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 560.0, "series": [{"data": [[0.0, 1.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 560.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 438.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.5, "minX": 1.61192076E12, "maxY": 500.0, "series": [{"data": [[1.611920784E12, 500.0], [1.611920868E12, 162.0769230769231], [1.611920782E12, 500.0], [1.611920866E12, 171.20000000000002], [1.61192078E12, 500.0], [1.611920874E12, 123.5], [1.611920788E12, 498.375], [1.611920872E12, 131.0], [1.611920786E12, 499.64705882352945], [1.61192087E12, 146.61111111111114], [1.611920858E12, 226.6923076923077], [1.611920772E12, 500.0], [1.611920856E12, 250.95238095238096], [1.61192077E12, 500.0], [1.611920854E12, 279.8571428571428], [1.611920864E12, 177.9375], [1.611920778E12, 500.0], [1.611920862E12, 186.12195121951223], [1.611920776E12, 500.0], [1.61192086E12, 204.7941176470588], [1.611920774E12, 500.0], [1.61192089E12, 16.043478260869566], [1.611920804E12, 489.8333333333333], [1.611920888E12, 41.82142857142857], [1.611920802E12, 491.85], [1.611920886E12, 61.5], [1.61192081E12, 480.84615384615387], [1.611920808E12, 484.2], [1.611920892E12, 2.5], [1.611920806E12, 486.1666666666666], [1.61192088E12, 104.5], [1.611920794E12, 495.85714285714283], [1.611920878E12, 115.0], [1.611920792E12, 498.0], [1.611920876E12, 120.5], [1.61192079E12, 498.0], [1.6119208E12, 492.22222222222223], [1.611920884E12, 75.5], [1.611920798E12, 494.0], [1.611920882E12, 90.57142857142857], [1.611920796E12, 494.1428571428571], [1.611920826E12, 417.6315789473684], [1.611920824E12, 425.70588235294116], [1.611920822E12, 436.45000000000005], [1.611920832E12, 408.77777777777777], [1.61192083E12, 409.7857142857143], [1.611920828E12, 412.6], [1.611920816E12, 460.24999999999994], [1.611920814E12, 468.12500000000006], [1.611920812E12, 472.94117647058823], [1.61192082E12, 447.2941176470587], [1.611920818E12, 452.5], [1.611920848E12, 343.17647058823536], [1.611920846E12, 356.44444444444446], [1.61192076E12, 500.0], [1.611920844E12, 367.67999999999995], [1.611920852E12, 308.37837837837833], [1.61192085E12, 328.62500000000006], [1.611920836E12, 400.00000000000006], [1.611920834E12, 405.69230769230774], [1.611920842E12, 375.88000000000005], [1.61192084E12, 386.30769230769226], [1.611920838E12, 394.125]], "isOverall": false, "label": "ThreadConfig", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.611920892E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 437.0, "minX": 1.0, "maxY": 127419.0, "series": [{"data": [[175.0, 124145.66666666667], [174.0, 124991.0], [171.0, 119098.0], [169.0, 127419.0], [182.0, 119415.5], [181.0, 118061.5], [179.0, 120172.28571428572], [178.0, 120414.0], [176.0, 119797.75], [191.0, 122441.0], [190.0, 124139.0], [188.0, 120466.6], [186.0, 117859.0], [185.0, 120122.5], [199.0, 122081.0], [197.0, 112099.0], [195.0, 123002.0], [192.0, 117848.0], [203.0, 121862.0], [200.0, 110299.0], [215.0, 117816.0], [213.0, 117253.0], [211.0, 117489.75], [221.0, 113424.0], [220.0, 117038.0], [217.0, 112227.0], [231.0, 106601.0], [230.0, 119654.0], [228.0, 108434.5], [227.0, 115930.5], [226.0, 116709.0], [224.0, 111304.0], [239.0, 116280.5], [238.0, 105644.0], [236.0, 119891.0], [235.0, 117415.0], [234.0, 118497.0], [245.0, 115145.0], [244.0, 113259.0], [242.0, 118454.0], [240.0, 118354.0], [251.0, 114480.0], [267.0, 114584.0], [266.0, 108930.5], [262.0, 111911.0], [261.0, 116583.0], [256.0, 112900.66666666667], [287.0, 111714.5], [283.0, 110448.0], [277.0, 109733.0], [274.0, 105073.0], [273.0, 116000.0], [272.0, 104203.0], [302.0, 108985.0], [301.0, 108097.5], [294.0, 107088.66666666667], [293.0, 113827.0], [319.0, 108917.0], [316.0, 114299.0], [310.0, 104314.0], [304.0, 114456.0], [331.0, 105717.0], [325.0, 100451.0], [324.0, 108884.5], [350.0, 97480.33333333333], [348.0, 104309.0], [346.0, 98582.0], [344.0, 106859.0], [367.0, 100734.0], [366.0, 100719.33333333334], [364.0, 107239.0], [359.0, 108135.0], [357.0, 100901.83333333334], [354.0, 101830.0], [383.0, 95347.0], [381.0, 102133.0], [379.0, 97889.0], [378.0, 95849.66666666667], [376.0, 95215.25], [371.0, 105290.0], [370.0, 100861.6], [369.0, 99226.85714285714], [398.0, 95690.5], [397.0, 94160.0], [396.0, 94935.0], [395.0, 94378.5], [390.0, 99263.0], [389.0, 97137.5], [385.0, 95184.0], [414.0, 76888.0], [413.0, 78884.0], [411.0, 87373.0], [410.0, 86012.125], [409.0, 85588.0], [408.0, 85597.66666666667], [404.0, 92590.0], [403.0, 84381.0], [401.0, 88781.5], [400.0, 94190.0], [429.0, 78572.0], [431.0, 79944.0], [428.0, 86239.0], [426.0, 84171.66666666667], [424.0, 82617.0], [423.0, 82708.0], [421.0, 81766.0], [418.0, 82980.75], [417.0, 83755.66666666667], [445.0, 74273.0], [446.0, 76891.25], [444.0, 73479.0], [443.0, 75744.5], [442.0, 78946.66666666667], [441.0, 73977.0], [438.0, 84049.5], [435.0, 79398.0], [433.0, 81145.0], [462.0, 64524.0], [456.0, 73050.33333333333], [454.0, 69434.0], [452.0, 75015.3], [451.0, 75286.75], [450.0, 75759.0], [479.0, 67793.0], [478.0, 63893.666666666664], [472.0, 67765.33333333333], [471.0, 66276.0], [469.0, 66859.36363636365], [468.0, 67418.0], [466.0, 66220.0], [465.0, 67641.0], [494.0, 54781.6111111111], [495.0, 50833.0], [493.0, 59386.333333333336], [492.0, 56740.8], [491.0, 60198.4], [490.0, 58282.5], [489.0, 64885.5], [488.0, 67588.0], [487.0, 61585.5], [483.0, 65947.2], [486.0, 56243.0], [485.0, 61889.00000000001], [484.0, 63675.8], [500.0, 32307.5974025974], [499.0, 40563.875], [498.0, 45128.27272727272], [496.0, 50364.333333333336]], "isOverall": false, "label": "Zalando Home Page", "isController": false}, {"data": [[396.1740000000001, 78252.45800000003]], "isOverall": false, "label": "Zalando Home Page-Aggregated", "isController": false}, {"data": [[2.0, 21046.0], [3.0, 21047.0], [4.0, 21063.0], [5.0, 21047.0], [6.0, 21046.0], [7.0, 21046.0], [8.0, 21046.0], [9.0, 21062.0], [10.0, 21063.0], [12.0, 21046.0], [13.0, 21047.0], [14.0, 21062.0], [15.0, 21077.0], [16.0, 21062.0], [17.0, 21078.0], [18.0, 21047.0], [19.0, 21046.0], [20.0, 21062.0], [21.0, 21047.0], [22.0, 21031.0], [23.0, 21046.0], [24.0, 21062.0], [25.0, 21062.0], [26.0, 21062.0], [27.0, 21062.0], [28.0, 21062.0], [29.0, 21062.0], [30.0, 21062.0], [31.0, 21062.0], [33.0, 21062.0], [32.0, 21062.0], [35.0, 21047.0], [34.0, 21047.0], [37.0, 21061.0], [38.0, 21047.0], [42.0, 21058.25], [45.0, 21047.0], [44.0, 21054.5], [47.0, 21047.0], [46.0, 21047.0], [48.0, 21031.0], [51.0, 21047.0], [50.0, 21046.0], [53.0, 21046.0], [52.0, 21063.0], [55.0, 21047.0], [54.0, 21047.0], [57.0, 21062.0], [56.0, 21062.0], [59.0, 21077.0], [58.0, 21047.0], [61.0, 21031.0], [60.0, 21046.0], [63.0, 15421.0], [62.0, 21062.0], [67.0, 21046.0], [66.0, 21046.0], [65.0, 21046.0], [64.0, 21047.0], [71.0, 21062.0], [70.0, 21063.0], [69.0, 21062.0], [68.0, 21063.0], [75.0, 21062.0], [74.0, 21057.0], [73.0, 21077.0], [72.0, 21047.0], [79.0, 21047.0], [78.0, 21046.0], [77.0, 21031.0], [76.0, 21062.0], [83.0, 21047.0], [82.0, 21031.0], [81.0, 21047.0], [80.0, 21046.0], [87.0, 21015.0], [86.0, 21046.0], [85.0, 21030.0], [84.0, 21047.0], [91.0, 21062.0], [90.0, 21047.0], [89.0, 21015.0], [88.0, 21031.0], [95.0, 21031.0], [94.0, 21016.0], [93.0, 15393.0], [92.0, 21061.0], [99.0, 21042.0], [98.0, 21030.0], [97.0, 21039.0], [103.0, 21031.0], [102.0, 21031.0], [101.0, 21031.0], [100.0, 21015.0], [107.0, 21031.0], [106.0, 21015.0], [105.0, 21063.0], [104.0, 21031.0], [111.0, 21047.0], [110.0, 21015.0], [109.0, 21015.0], [108.0, 21046.0], [115.0, 21015.0], [114.0, 21047.0], [113.0, 21000.0], [112.0, 21046.0], [119.0, 21032.0], [118.0, 21047.0], [117.0, 21047.0], [116.0, 21078.0], [123.0, 21040.0], [122.0, 7389.0], [121.0, 21032.0], [120.0, 21016.0], [127.0, 21054.0], [126.0, 21022.0], [125.0, 21053.0], [124.0, 21118.0], [135.0, 21038.0], [134.0, 21054.0], [133.0, 21038.0], [132.0, 21038.0], [131.0, 21045.0], [130.0, 21022.0], [129.0, 21055.0], [128.0, 7357.0], [143.0, 21060.0], [142.0, 21062.0], [141.0, 1416.0], [140.0, 21076.0], [138.0, 21046.0], [137.0, 21037.0], [136.0, 21053.0], [151.0, 21062.0], [150.0, 21062.0], [148.0, 21046.0], [147.0, 21046.0], [146.0, 21062.0], [145.0, 21061.0], [144.0, 21061.0], [159.0, 21037.0], [158.0, 21022.0], [157.0, 21051.0], [156.0, 21031.0], [155.0, 21046.0], [154.0, 21061.0], [153.0, 21046.0], [152.0, 21015.0], [167.0, 21052.0], [166.0, 437.0], [165.0, 21069.0], [164.0, 21067.5], [162.0, 21037.0], [161.0, 21053.0], [160.0, 21036.0], [175.0, 21053.0], [174.0, 21038.0], [173.0, 21070.0], [172.0, 21086.0], [171.0, 3400.0], [170.0, 21044.0], [169.0, 21046.0], [168.0, 21037.0], [183.0, 21047.0], [182.0, 56483.0], [181.0, 21030.0], [180.0, 21093.0], [179.0, 21048.0], [178.0, 21047.0], [177.0, 21047.0], [176.0, 21067.0], [191.0, 25859.0], [190.0, 25889.0], [189.0, 72862.0], [188.0, 21077.0], [187.0, 21062.0], [186.0, 74836.0], [185.0, 21032.0], [199.0, 8339.0], [197.0, 18662.0], [196.0, 21063.0], [195.0, 16194.0], [194.0, 78161.0], [193.0, 79161.0], [192.0, 21079.0], [204.0, 11441.0], [203.0, 21047.0], [202.0, 22809.0], [201.0, 12722.0], [200.0, 8238.0], [215.0, 39648.0], [214.0, 37128.0], [213.0, 34413.0], [212.0, 25416.0], [211.0, 22881.0], [209.0, 22236.0], [223.0, 33015.0], [222.0, 36581.0], [221.0, 22913.0], [220.0, 33240.0], [219.0, 51970.0], [218.0, 39842.0], [217.0, 52326.0], [216.0, 51886.0], [231.0, 21032.0], [230.0, 75848.0], [229.0, 34128.0], [228.0, 32687.0], [227.0, 38969.0], [226.0, 34159.0], [225.0, 32970.0], [224.0, 21062.0], [239.0, 32687.0], [238.0, 21048.0], [237.0, 32084.0], [236.0, 21080.0], [235.0, 71266.0], [234.0, 21271.0], [233.0, 33094.0], [232.0, 35591.0], [247.0, 30280.0], [246.0, 21048.0], [245.0, 19838.0], [244.0, 42354.0], [243.0, 43685.0], [242.0, 31812.0], [241.0, 21079.0], [240.0, 21579.0], [255.0, 21093.5], [253.0, 27400.0], [252.0, 33267.0], [251.0, 36818.0], [250.0, 49107.0], [249.0, 26493.5], [270.0, 29503.0], [271.0, 30477.0], [269.0, 26764.0], [268.0, 67212.0], [267.0, 28850.0], [266.0, 25626.0], [265.0, 31103.0], [264.0, 31528.0], [263.0, 31437.0], [256.0, 46958.0], [259.0, 53168.0], [257.0, 30063.0], [262.0, 21064.0], [261.0, 21053.0], [260.0, 51695.0], [286.0, 26163.0], [287.0, 29551.0], [285.0, 51933.0], [275.0, 30441.0], [274.0, 25385.0], [273.0, 30590.0], [272.0, 25705.0], [283.0, 30240.0], [282.0, 35147.0], [281.0, 29753.0], [280.0, 29842.0], [279.0, 34195.0], [278.0, 41881.0], [277.0, 30672.0], [276.0, 29823.0], [302.0, 21041.0], [303.0, 21026.0], [301.0, 28742.0], [300.0, 26656.0], [299.0, 27971.0], [298.0, 29960.0], [297.0, 45828.0], [296.0, 32939.0], [295.0, 21047.0], [289.0, 36260.0], [288.0, 30105.0], [291.0, 45675.0], [290.0, 28175.0], [294.0, 21041.0], [293.0, 29621.0], [292.0, 35320.0], [318.0, 34065.0], [319.0, 47300.0], [317.0, 21088.0], [316.0, 21056.0], [315.0, 21055.0], [314.0, 21047.5], [312.0, 27641.0], [311.0, 45878.0], [305.0, 28460.0], [304.0, 36750.0], [307.0, 28477.0], [306.0, 21040.0], [310.0, 21047.0], [308.0, 26262.0], [334.0, 21039.0], [335.0, 21046.0], [333.0, 42981.0], [332.0, 21057.0], [331.0, 39903.0], [330.0, 37496.0], [329.0, 68286.0], [328.0, 42442.0], [327.0, 27621.0], [321.0, 33768.0], [320.0, 27198.0], [323.0, 21040.0], [322.0, 39932.0], [326.0, 35445.0], [325.0, 29936.0], [324.0, 36235.0], [350.0, 66162.0], [351.0, 51593.0], [349.0, 47765.0], [348.0, 35574.0], [347.0, 35203.0], [346.0, 54629.0], [345.0, 28583.0], [344.0, 42784.0], [342.0, 21008.0], [337.0, 21039.0], [336.0, 57455.0], [339.0, 42296.0], [338.0, 36775.0], [341.0, 21024.0], [340.0, 38556.0], [366.0, 53915.0], [367.0, 30112.0], [365.0, 32885.0], [364.0, 58259.0], [363.0, 45219.0], [362.0, 44010.0], [361.0, 38171.0], [360.0, 62358.0], [359.0, 40140.0], [353.0, 28444.0], [352.0, 38745.0], [355.0, 40106.0], [354.0, 38556.0], [358.0, 34155.0], [357.0, 38074.0], [356.0, 53110.0], [382.0, 27818.0], [383.0, 25040.0], [381.0, 49141.0], [380.0, 24492.0], [379.0, 23359.0], [378.0, 26849.0], [377.0, 24705.0], [376.0, 28852.0], [375.0, 30076.0], [369.0, 50342.0], [368.0, 39085.0], [371.0, 38135.0], [370.0, 27118.0], [374.0, 38569.0], [373.0, 34497.0], [372.0, 34224.0], [398.0, 57881.0], [399.0, 52799.0], [397.0, 25470.0], [396.0, 32952.0], [395.0, 23642.0], [394.0, 33189.0], [393.0, 36403.0], [392.0, 20204.0], [391.0, 34834.0], [385.0, 21920.0], [384.0, 31971.0], [387.0, 29878.0], [386.0, 34712.0], [390.0, 35115.0], [389.0, 26967.0], [388.0, 21198.0], [414.0, 29727.0], [415.0, 43743.0], [413.0, 42312.0], [412.0, 40484.0], [411.0, 39246.0], [410.0, 31494.0], [409.0, 52684.0], [408.0, 28086.0], [407.0, 44262.0], [401.0, 32647.0], [400.0, 52156.0], [403.0, 38864.0], [402.0, 59309.0], [406.0, 29685.0], [405.0, 25635.0], [404.0, 30295.0], [430.0, 57808.0], [431.0, 27618.0], [429.0, 31788.0], [428.0, 45512.0], [427.0, 29024.0], [426.0, 16748.0], [425.0, 42661.0], [424.0, 38471.0], [423.0, 20921.0], [417.0, 38614.0], [416.0, 48895.0], [419.0, 21307.0], [418.0, 44262.0], [422.0, 32386.0], [421.0, 23136.0], [420.0, 20219.0], [446.0, 30650.0], [447.0, 33409.0], [445.0, 16483.0], [444.0, 41139.0], [443.0, 27537.0], [442.0, 16247.0], [441.0, 15278.0], [440.0, 15420.0], [439.0, 39621.0], [433.0, 34491.0], [432.0, 14408.0], [435.0, 30369.0], [434.0, 20291.0], [438.0, 29958.0], [437.0, 38830.0], [436.0, 31458.0], [462.0, 34459.0], [463.0, 28696.0], [461.0, 15026.0], [460.0, 34512.0], [459.0, 11885.0], [458.0, 14095.0], [457.0, 12168.0], [456.0, 9218.0], [455.0, 10002.0], [449.0, 32818.0], [448.0, 29318.0], [451.0, 21022.0], [450.0, 12038.0], [454.0, 32537.0], [453.0, 17280.0], [452.0, 28535.0], [478.0, 21019.0], [479.0, 30435.0], [477.0, 30097.0], [476.0, 30193.0], [475.0, 21031.0], [474.0, 30299.0], [473.0, 8625.0], [472.0, 21071.0], [471.0, 25907.0], [465.0, 9440.0], [464.0, 34294.0], [467.0, 11098.0], [466.0, 32506.0], [470.0, 30196.0], [469.0, 28164.0], [468.0, 35845.0], [494.0, 21549.0], [495.0, 8706.0], [493.0, 17177.0], [492.0, 12252.0], [491.0, 27047.0], [490.0, 13103.0], [489.0, 27298.0], [488.0, 13689.0], [487.0, 24613.0], [481.0, 27597.0], [480.0, 11207.0], [483.0, 7735.0], [482.0, 30080.0], [486.0, 16280.0], [485.0, 17352.0], [484.0, 29391.0], [500.0, 11406.0], [499.0, 9689.0], [498.0, 6872.0], [497.0, 9834.0], [496.0, 8966.0], [1.0, 111290.0]], "isOverall": false, "label": "Search for jeans", "isController": false}, {"data": [[250.584, 27555.01600000003]], "isOverall": false, "label": "Search for jeans-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61192076E12, "maxY": 1.62000895E7, "series": [{"data": [[1.611920784E12, 511922.0], [1.611920868E12, 230604.5], [1.611920782E12, 1036712.0], [1.611920866E12, 2142285.5], [1.61192078E12, 2029404.5], [1.611920874E12, 2955.0], [1.611920788E12, 223187.0], [1.611920872E12, 230564.0], [1.611920786E12, 3798815.5], [1.61192087E12, 239578.0], [1.611920858E12, 1.19292365E7], [1.611920772E12, 503846.5], [1.611920856E12, 1.1749493E7], [1.61192077E12, 494491.5], [1.611920854E12, 1.2462052E7], [1.611920864E12, 1.21439525E7], [1.611920778E12, 1543358.5], [1.611920862E12, 1.62000895E7], [1.611920776E12, 2509148.5], [1.61192086E12, 8526027.0], [1.611920774E12, 494388.0], [1.61192089E12, 33982.5], [1.611920804E12, 3623449.5], [1.611920888E12, 41370.0], [1.611920802E12, 3230455.5], [1.611920886E12, 229091.0], [1.61192081E12, 4196096.5], [1.611920808E12, 4162984.5], [1.611920892E12, 217288.0], [1.611920806E12, 4070365.0], [1.61192088E12, 20685.0], [1.611920794E12, 1456709.0], [1.611920878E12, 10342.5], [1.611920792E12, 213908.0], [1.611920876E12, 218872.0], [1.61192079E12, 492694.0], [1.6119208E12, 5156805.0], [1.611920884E12, 23640.0], [1.611920798E12, 2652709.5], [1.611920882E12, 233699.0], [1.611920796E12, 2228640.0], [1.611920826E12, 5168573.0], [1.611920824E12, 3777035.0], [1.611920822E12, 4381686.0], [1.611920832E12, 3029319.0], [1.61192083E12, 2706943.5], [1.611920828E12, 505989.0], [1.611920816E12, 1565488.5], [1.611920814E12, 4666673.0], [1.611920812E12, 3372171.5], [1.61192082E12, 5135376.0], [1.611920818E12, 3864912.5], [1.611920848E12, 2618102.5], [1.611920846E12, 7637751.5], [1.61192076E12, 2095.0], [1.611920844E12, 8127478.5], [1.611920852E12, 7604262.0], [1.61192085E12, 3960091.5], [1.611920836E12, 2673544.0], [1.611920834E12, 2757614.5], [1.611920842E12, 7504082.5], [1.61192084E12, 3025316.0], [1.611920838E12, 5196263.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.611920784E12, 62.0], [1.611920868E12, 63.5], [1.611920782E12, 124.0], [1.611920866E12, 311.5], [1.61192078E12, 248.0], [1.611920874E12, 0.0], [1.611920788E12, 63.5], [1.611920872E12, 63.5], [1.611920786E12, 497.5], [1.61192087E12, 63.5], [1.611920858E12, 2198.5], [1.611920772E12, 62.0], [1.611920856E12, 2200.0], [1.61192077E12, 62.0], [1.611920854E12, 2584.0], [1.611920864E12, 1551.5], [1.611920778E12, 186.0], [1.611920862E12, 2176.0], [1.611920776E12, 310.0], [1.61192086E12, 1634.5], [1.611920774E12, 62.0], [1.61192089E12, 0.0], [1.611920804E12, 562.5], [1.611920888E12, 0.0], [1.611920802E12, 435.5], [1.611920886E12, 63.5], [1.61192081E12, 624.5], [1.611920808E12, 559.5], [1.611920892E12, 63.5], [1.611920806E12, 624.5], [1.61192088E12, 0.0], [1.611920794E12, 251.0], [1.611920878E12, 0.0], [1.611920792E12, 63.5], [1.611920876E12, 63.5], [1.61192079E12, 62.0], [1.6119208E12, 683.5], [1.611920884E12, 0.0], [1.611920798E12, 373.5], [1.611920882E12, 63.5], [1.611920796E12, 311.5], [1.611920826E12, 877.0], [1.611920824E12, 691.0], [1.611920822E12, 881.5], [1.611920832E12, 372.0], [1.61192083E12, 373.5], [1.611920828E12, 62.0], [1.611920816E12, 379.5], [1.611920814E12, 686.5], [1.611920812E12, 499.0], [1.61192082E12, 748.5], [1.611920818E12, 626.0], [1.611920848E12, 697.0], [1.611920846E12, 1510.5], [1.61192076E12, 0.0], [1.611920844E12, 1249.0], [1.611920852E12, 1575.5], [1.61192085E12, 819.5], [1.611920836E12, 438.5], [1.611920834E12, 502.0], [1.611920842E12, 1382.0], [1.61192084E12, 565.5], [1.611920838E12, 942.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.611920892E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6872.0, "minX": 1.61192076E12, "maxY": 124731.75, "series": [{"data": [[1.611920784E12, 36686.5], [1.611920782E12, 36912.16666666667], [1.611920866E12, 124731.75], [1.61192078E12, 33699.857142857145], [1.611920788E12, 43034.71428571428], [1.611920786E12, 40503.31249999999], [1.611920858E12, 114545.62499999999], [1.611920772E12, 26810.833333333336], [1.611920856E12, 114363.86666666667], [1.61192077E12, 28456.5], [1.611920854E12, 109605.76923076922], [1.611920864E12, 120212.45833333334], [1.611920778E12, 29826.75], [1.611920862E12, 119323.35483870967], [1.611920776E12, 28970.428571428572], [1.61192086E12, 116986.72727272726], [1.611920774E12, 26868.666666666668], [1.611920804E12, 60922.555555555555], [1.611920802E12, 59175.68421052632], [1.61192081E12, 65996.25], [1.611920808E12, 62925.25], [1.611920806E12, 62619.66666666667], [1.611920794E12, 50551.8], [1.611920792E12, 41738.0], [1.61192079E12, 46390.6], [1.6119208E12, 55220.11764705882], [1.611920798E12, 56178.5], [1.611920796E12, 51987.83333333333], [1.611920826E12, 82666.75], [1.611920824E12, 83052.125], [1.611920822E12, 80424.0], [1.611920832E12, 86300.74999999999], [1.61192083E12, 85717.66666666667], [1.611920828E12, 83128.5], [1.611920816E12, 68422.66666666667], [1.611920814E12, 66922.41666666666], [1.611920812E12, 66331.25], [1.61192082E12, 75292.28000000001], [1.611920818E12, 75632.82352941176], [1.611920848E12, 103250.0], [1.611920846E12, 101254.66666666667], [1.61192076E12, 22079.5], [1.611920844E12, 99937.47368421053], [1.611920852E12, 109839.375], [1.61192085E12, 105984.25], [1.611920836E12, 91870.75], [1.611920834E12, 85919.33333333333], [1.611920842E12, 98542.92307692306], [1.61192084E12, 96140.0], [1.611920838E12, 95741.57142857143]], "isOverall": false, "label": "Zalando Home Page", "isController": false}, {"data": [[1.611920868E12, 19461.30769230769], [1.611920866E12, 18114.0], [1.611920874E12, 21079.0], [1.611920788E12, 9689.0], [1.611920872E12, 19989.69230769231], [1.611920786E12, 11406.0], [1.61192087E12, 19964.77777777778], [1.611920858E12, 36872.260869565216], [1.611920856E12, 32495.0], [1.611920854E12, 33375.27586206898], [1.611920864E12, 25483.5], [1.611920862E12, 32577.499999999996], [1.61192086E12, 26187.08695652174], [1.61192089E12, 21054.565217391297], [1.611920804E12, 22482.666666666668], [1.611920888E12, 21053.249999999996], [1.611920802E12, 12252.0], [1.611920886E12, 20582.75], [1.61192081E12, 21410.8], [1.611920808E12, 23371.5], [1.611920892E12, 43611.5], [1.611920806E12, 18194.0], [1.61192088E12, 21031.642857142855], [1.611920794E12, 9400.0], [1.611920878E12, 21040.0], [1.611920792E12, 6872.0], [1.611920876E12, 17617.25], [1.6119208E12, 17177.0], [1.611920884E12, 21053.124999999996], [1.611920798E12, 21549.0], [1.611920882E12, 20633.714285714286], [1.611920796E12, 8706.0], [1.611920826E12, 34310.857142857145], [1.611920824E12, 35035.444444444445], [1.611920822E12, 26165.749999999996], [1.611920832E12, 52684.0], [1.61192083E12, 35370.0], [1.611920828E12, 37507.666666666664], [1.611920816E12, 21619.44444444445], [1.611920814E12, 26903.25], [1.611920812E12, 24270.88888888889], [1.61192082E12, 27157.11111111111], [1.611920818E12, 19514.4], [1.611920848E12, 37533.92857142857], [1.611920846E12, 45140.13333333333], [1.611920844E12, 38909.5], [1.611920852E12, 28289.965517241377], [1.61192085E12, 35290.583333333336], [1.611920836E12, 45867.333333333336], [1.611920834E12, 36590.857142857145], [1.611920842E12, 31726.416666666664], [1.61192084E12, 27383.714285714286], [1.611920838E12, 33298.8888888889]], "isOverall": false, "label": "Search for jeans", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.611920892E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61192076E12, "maxY": 19442.5, "series": [{"data": [[1.611920784E12, 1352.5], [1.611920782E12, 2529.25], [1.611920866E12, 6601.5], [1.61192078E12, 2356.8571428571427], [1.611920788E12, 3539.5714285714284], [1.611920786E12, 3146.1874999999995], [1.611920858E12, 12901.4375], [1.611920772E12, 566.8333333333334], [1.611920856E12, 5562.266666666666], [1.61192077E12, 3046.5], [1.611920854E12, 10974.23076923077], [1.611920864E12, 13630.041666666666], [1.611920778E12, 1378.9166666666667], [1.611920862E12, 11821.612903225807], [1.611920776E12, 1661.6428571428573], [1.61192086E12, 15415.181818181816], [1.611920774E12, 883.5], [1.611920804E12, 12184.444444444445], [1.611920802E12, 3939.2631578947367], [1.61192081E12, 5201.75], [1.611920808E12, 9280.0], [1.611920806E12, 5888.111111111111], [1.611920794E12, 1468.0], [1.611920792E12, 0.0], [1.61192079E12, 5818.0], [1.6119208E12, 4299.294117647059], [1.611920798E12, 4941.416666666667], [1.611920796E12, 5451.0], [1.611920826E12, 9149.916666666668], [1.611920824E12, 3677.375], [1.611920822E12, 4665.250000000001], [1.611920832E12, 16186.625], [1.61192083E12, 9880.75], [1.611920828E12, 19442.5], [1.611920816E12, 592.3333333333334], [1.611920814E12, 5437.333333333333], [1.611920812E12, 4069.0000000000005], [1.61192082E12, 7416.960000000001], [1.611920818E12, 8414.235294117649], [1.611920848E12, 5150.333333333333], [1.611920846E12, 10811.916666666666], [1.61192076E12, 0.0], [1.611920844E12, 7533.210526315789], [1.611920852E12, 10107.5], [1.61192085E12, 7457.0], [1.611920836E12, 6030.75], [1.611920834E12, 11187.166666666666], [1.611920842E12, 11118.923076923076], [1.61192084E12, 4951.166666666667], [1.611920838E12, 3864.8571428571436]], "isOverall": false, "label": "Zalando Home Page", "isController": false}, {"data": [[1.611920868E12, 27.538461538461533], [1.611920866E12, 552.3333333333333], [1.611920874E12, 0.0], [1.611920788E12, 9353.0], [1.611920872E12, 559.8461538461538], [1.611920786E12, 1961.0], [1.61192087E12, 74.16666666666667], [1.611920858E12, 15633.782608695652], [1.611920856E12, 11310.925925925923], [1.611920854E12, 12422.206896551725], [1.611920864E12, 2073.75], [1.611920862E12, 7848.9], [1.61192086E12, 9401.086956521742], [1.61192089E12, 0.0], [1.611920804E12, 13865.333333333334], [1.611920888E12, 0.0], [1.611920802E12, 6677.0], [1.611920886E12, 1274.6666666666665], [1.61192081E12, 5819.4], [1.611920808E12, 3830.0], [1.611920892E12, 2178.25], [1.611920806E12, 10174.666666666666], [1.61192088E12, 0.0], [1.611920794E12, 6129.0], [1.611920878E12, 0.0], [1.611920792E12, 6271.0], [1.611920876E12, 1824.75], [1.6119208E12, 7769.0], [1.611920884E12, 0.0], [1.611920798E12, 10482.0], [1.611920882E12, 1093.7142857142856], [1.611920796E12, 7239.0], [1.611920826E12, 14989.285714285716], [1.611920824E12, 15300.555555555555], [1.611920822E12, 14275.75], [1.611920832E12, 0.0], [1.61192083E12, 3008.0], [1.611920828E12, 0.0], [1.611920816E12, 3970.3333333333335], [1.611920814E12, 10877.25], [1.611920812E12, 2691.1111111111113], [1.61192082E12, 3979.8888888888887], [1.611920818E12, 6204.0], [1.611920848E12, 13155.785714285714], [1.611920846E12, 16738.133333333335], [1.611920844E12, 18166.666666666668], [1.611920852E12, 6525.896551724138], [1.61192085E12, 11007.333333333334], [1.611920836E12, 15045.333333333334], [1.611920834E12, 9979.142857142857], [1.611920842E12, 13743.666666666666], [1.61192084E12, 7190.571428571428], [1.611920838E12, 11494.111111111111]], "isOverall": false, "label": "Search for jeans", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.611920892E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61192076E12, "maxY": 52684.0, "series": [{"data": [[1.611920784E12, 23526.666666666664], [1.611920782E12, 14929.583333333332], [1.611920866E12, 5306.0], [1.61192078E12, 9613.142857142857], [1.611920788E12, 25209.0], [1.611920786E12, 15713.750000000004], [1.611920858E12, 5295.5], [1.611920772E12, 18896.333333333332], [1.611920856E12, 3833.7999999999993], [1.61192077E12, 18383.5], [1.611920854E12, 6227.2307692307695], [1.611920864E12, 6305.541666666666], [1.611920778E12, 20736.0], [1.611920862E12, 5640.548387096775], [1.611920776E12, 17374.285714285714], [1.61192086E12, 6923.818181818182], [1.611920774E12, 18683.5], [1.611920804E12, 4812.111111111111], [1.611920802E12, 8562.315789473683], [1.61192081E12, 3547.125], [1.611920808E12, 3260.3749999999995], [1.611920806E12, 9412.444444444445], [1.611920794E12, 11888.4], [1.611920792E12, 41737.0], [1.61192079E12, 11573.2], [1.6119208E12, 20840.529411764706], [1.611920798E12, 17861.416666666668], [1.611920796E12, 4163.166666666667], [1.611920826E12, 9880.5], [1.611920824E12, 2606.625], [1.611920822E12, 2803.375], [1.611920832E12, 4773.0], [1.61192083E12, 5195.083333333333], [1.611920828E12, 3059.5], [1.611920816E12, 43712.0], [1.611920814E12, 18971.25], [1.611920812E12, 18080.125], [1.61192082E12, 4388.320000000001], [1.611920818E12, 4983.235294117647], [1.611920848E12, 3502.333333333333], [1.611920846E12, 5992.166666666667], [1.61192076E12, 17789.0], [1.611920844E12, 3666.2105263157905], [1.611920852E12, 3876.7499999999995], [1.61192085E12, 4376.5], [1.611920836E12, 3510.75], [1.611920834E12, 7096.333333333334], [1.611920842E12, 5492.538461538462], [1.61192084E12, 2679.833333333333], [1.611920838E12, 2573.0]], "isOverall": false, "label": "Zalando Home Page", "isController": false}, {"data": [[1.611920868E12, 19433.23076923077], [1.611920866E12, 18058.666666666668], [1.611920874E12, 21079.0], [1.611920788E12, 0.0], [1.611920872E12, 19968.46153846154], [1.611920786E12, 0.0], [1.61192087E12, 19947.055555555555], [1.611920858E12, 13311.739130434784], [1.611920856E12, 12008.666666666666], [1.611920854E12, 8628.689655172415], [1.611920864E12, 19649.25], [1.611920862E12, 17404.3], [1.61192086E12, 14203.086956521742], [1.61192089E12, 21054.43478260869], [1.611920804E12, 6065.666666666667], [1.611920888E12, 21053.178571428565], [1.611920802E12, 0.0], [1.611920886E12, 20554.25], [1.61192081E12, 10027.0], [1.611920808E12, 14695.5], [1.611920892E12, 15788.75], [1.611920806E12, 0.0], [1.61192088E12, 21031.5], [1.611920794E12, 0.0], [1.611920878E12, 21039.714285714283], [1.611920792E12, 0.0], [1.611920876E12, 17539.0], [1.6119208E12, 0.0], [1.611920884E12, 21052.9375], [1.611920798E12, 6312.0], [1.611920882E12, 20613.07142857143], [1.611920796E12, 0.0], [1.611920826E12, 10176.0], [1.611920824E12, 14633.222222222223], [1.611920822E12, 12608.249999999998], [1.611920832E12, 52684.0], [1.61192083E12, 19623.0], [1.611920828E12, 22804.0], [1.611920816E12, 12789.666666666664], [1.611920814E12, 7778.5], [1.611920812E12, 20303.555555555555], [1.61192082E12, 16413.333333333332], [1.611920818E12, 2638.6], [1.611920848E12, 15499.214285714284], [1.611920846E12, 12619.133333333333], [1.611920844E12, 9693.666666666666], [1.611920852E12, 13068.48275862069], [1.61192085E12, 12312.0], [1.611920836E12, 2956.0], [1.611920834E12, 14047.857142857141], [1.611920842E12, 10321.916666666668], [1.61192084E12, 10948.0], [1.611920838E12, 9102.888888888889]], "isOverall": false, "label": "Search for jeans", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.611920892E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 437.0, "minX": 1.61192077E12, "maxY": 128787.0, "series": [{"data": [[1.611920784E12, 37929.0], [1.611920868E12, 437.0], [1.611920782E12, 36804.0], [1.611920866E12, 128787.0], [1.61192078E12, 37575.0], [1.611920788E12, 9689.0], [1.611920872E12, 7357.0], [1.611920786E12, 48099.0], [1.61192087E12, 1416.0], [1.611920858E12, 120992.0], [1.611920772E12, 29263.0], [1.611920856E12, 119756.0], [1.61192077E12, 23906.0], [1.611920854E12, 116000.0], [1.611920864E12, 127319.0], [1.611920778E12, 38391.0], [1.611920862E12, 125158.0], [1.611920776E12, 33332.0], [1.61192086E12, 123002.0], [1.611920774E12, 29675.0], [1.611920804E12, 67533.0], [1.611920802E12, 61219.0], [1.611920886E12, 15421.0], [1.61192081E12, 71167.0], [1.611920808E12, 67894.0], [1.611920892E12, 111290.0], [1.611920806E12, 69648.0], [1.611920794E12, 52523.0], [1.611920792E12, 6872.0], [1.611920876E12, 7389.0], [1.61192079E12, 43155.0], [1.6119208E12, 61658.0], [1.611920798E12, 59684.0], [1.611920882E12, 15393.0], [1.611920796E12, 54661.0], [1.611920826E12, 89369.0], [1.611920824E12, 82708.0], [1.611920822E12, 82686.0], [1.611920832E12, 90910.0], [1.61192083E12, 93025.0], [1.611920828E12, 87373.0], [1.611920816E12, 75259.0], [1.611920814E12, 72038.0], [1.611920812E12, 71250.0], [1.61192082E12, 82064.0], [1.611920818E12, 80612.0], [1.611920848E12, 104309.0], [1.611920846E12, 108305.0], [1.611920844E12, 106247.0], [1.611920852E12, 114456.0], [1.61192085E12, 109642.0], [1.611920836E12, 95730.0], [1.611920834E12, 86742.0], [1.611920842E12, 103841.0], [1.61192084E12, 98144.0], [1.611920838E12, 99263.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.611920784E12, 37929.0], [1.611920868E12, 437.0], [1.611920782E12, 36804.0], [1.611920866E12, 128787.0], [1.61192078E12, 37575.0], [1.611920788E12, 9689.0], [1.611920872E12, 7357.0], [1.611920786E12, 48099.0], [1.61192087E12, 1416.0], [1.611920858E12, 118959.8], [1.611920772E12, 29263.0], [1.611920856E12, 117946.6], [1.61192077E12, 23906.0], [1.611920854E12, 113557.6], [1.611920864E12, 126778.0], [1.611920778E12, 38391.0], [1.611920862E12, 124317.8], [1.611920776E12, 33332.0], [1.61192086E12, 121927.7], [1.611920774E12, 29675.0], [1.611920804E12, 67533.0], [1.611920802E12, 61219.0], [1.611920886E12, 15421.0], [1.61192081E12, 70896.3], [1.611920808E12, 67894.0], [1.611920892E12, 111290.0], [1.611920806E12, 69490.1], [1.611920794E12, 52523.0], [1.611920792E12, 6872.0], [1.611920876E12, 7389.0], [1.61192079E12, 43155.0], [1.6119208E12, 60985.200000000004], [1.611920798E12, 59684.0], [1.611920882E12, 15393.0], [1.611920796E12, 54661.0], [1.611920826E12, 89078.0], [1.611920824E12, 82689.8], [1.611920822E12, 81185.0], [1.611920832E12, 90910.0], [1.61192083E12, 93025.0], [1.611920828E12, 87373.0], [1.611920816E12, 75259.0], [1.611920814E12, 71924.6], [1.611920812E12, 71250.0], [1.61192082E12, 80836.40000000001], [1.611920818E12, 80059.7], [1.611920848E12, 96356.40000000002], [1.611920846E12, 107687.0], [1.611920844E12, 103745.8], [1.611920852E12, 112649.0], [1.61192085E12, 109036.0], [1.611920836E12, 95730.0], [1.611920834E12, 86742.0], [1.611920842E12, 102140.4], [1.61192084E12, 98144.0], [1.611920838E12, 98949.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.611920784E12, 37929.0], [1.611920868E12, 437.0], [1.611920782E12, 36804.0], [1.611920866E12, 128787.0], [1.61192078E12, 37575.0], [1.611920788E12, 9689.0], [1.611920872E12, 7357.0], [1.611920786E12, 48099.0], [1.61192087E12, 1416.0], [1.611920858E12, 120992.0], [1.611920772E12, 29263.0], [1.611920856E12, 119756.0], [1.61192077E12, 23906.0], [1.611920854E12, 116000.0], [1.611920864E12, 127319.0], [1.611920778E12, 38391.0], [1.611920862E12, 125158.0], [1.611920776E12, 33332.0], [1.61192086E12, 123002.0], [1.611920774E12, 29675.0], [1.611920804E12, 67533.0], [1.611920802E12, 61219.0], [1.611920886E12, 15421.0], [1.61192081E12, 71167.0], [1.611920808E12, 67894.0], [1.611920892E12, 111290.0], [1.611920806E12, 69648.0], [1.611920794E12, 52523.0], [1.611920792E12, 6872.0], [1.611920876E12, 7389.0], [1.61192079E12, 43155.0], [1.6119208E12, 61658.0], [1.611920798E12, 59684.0], [1.611920882E12, 15393.0], [1.611920796E12, 54661.0], [1.611920826E12, 89369.0], [1.611920824E12, 82708.0], [1.611920822E12, 82686.0], [1.611920832E12, 90910.0], [1.61192083E12, 93025.0], [1.611920828E12, 87373.0], [1.611920816E12, 75259.0], [1.611920814E12, 72038.0], [1.611920812E12, 71250.0], [1.61192082E12, 82064.0], [1.611920818E12, 80612.0], [1.611920848E12, 104309.0], [1.611920846E12, 108305.0], [1.611920844E12, 106247.0], [1.611920852E12, 114456.0], [1.61192085E12, 109642.0], [1.611920836E12, 95730.0], [1.611920834E12, 86742.0], [1.611920842E12, 103841.0], [1.61192084E12, 98144.0], [1.611920838E12, 99263.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.611920784E12, 37929.0], [1.611920868E12, 437.0], [1.611920782E12, 36804.0], [1.611920866E12, 128787.0], [1.61192078E12, 37575.0], [1.611920788E12, 9689.0], [1.611920872E12, 7357.0], [1.611920786E12, 48099.0], [1.61192087E12, 1416.0], [1.611920858E12, 120111.2], [1.611920772E12, 29263.0], [1.611920856E12, 119356.0], [1.61192077E12, 23906.0], [1.611920854E12, 114579.9], [1.611920864E12, 127174.7], [1.611920778E12, 38391.0], [1.611920862E12, 124665.2], [1.611920776E12, 33332.0], [1.61192086E12, 122679.65], [1.611920774E12, 29675.0], [1.611920804E12, 67533.0], [1.611920802E12, 61219.0], [1.611920886E12, 15421.0], [1.61192081E12, 71167.0], [1.611920808E12, 67894.0], [1.611920892E12, 111290.0], [1.611920806E12, 69648.0], [1.611920794E12, 52523.0], [1.611920792E12, 6872.0], [1.611920876E12, 7389.0], [1.61192079E12, 43155.0], [1.6119208E12, 61658.0], [1.611920798E12, 59684.0], [1.611920882E12, 15393.0], [1.611920796E12, 54661.0], [1.611920826E12, 89369.0], [1.611920824E12, 82708.0], [1.611920822E12, 82686.0], [1.611920832E12, 90910.0], [1.61192083E12, 93025.0], [1.611920828E12, 87373.0], [1.611920816E12, 75259.0], [1.611920814E12, 72038.0], [1.611920812E12, 71250.0], [1.61192082E12, 82064.0], [1.611920818E12, 80612.0], [1.611920848E12, 104309.0], [1.611920846E12, 108262.5], [1.611920844E12, 106133.4], [1.611920852E12, 114408.9], [1.61192085E12, 109642.0], [1.611920836E12, 95730.0], [1.611920834E12, 86742.0], [1.611920842E12, 103592.75], [1.61192084E12, 98144.0], [1.611920838E12, 99263.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.611920784E12, 37929.0], [1.611920868E12, 437.0], [1.611920782E12, 31957.0], [1.611920866E12, 3400.0], [1.61192078E12, 35302.0], [1.611920788E12, 9689.0], [1.611920872E12, 7357.0], [1.611920786E12, 11406.0], [1.61192087E12, 1416.0], [1.611920858E12, 21271.0], [1.611920772E12, 29263.0], [1.611920856E12, 19838.0], [1.61192077E12, 23906.0], [1.611920854E12, 25385.0], [1.611920864E12, 56483.0], [1.611920778E12, 28427.0], [1.611920862E12, 25859.0], [1.611920776E12, 29923.0], [1.61192086E12, 4808.0], [1.611920774E12, 29675.0], [1.611920804E12, 13103.0], [1.611920802E12, 12252.0], [1.611920886E12, 15421.0], [1.61192081E12, 7735.0], [1.611920808E12, 17352.0], [1.611920892E12, 111290.0], [1.611920806E12, 13689.0], [1.611920794E12, 8966.0], [1.611920792E12, 6872.0], [1.611920876E12, 7389.0], [1.61192079E12, 43155.0], [1.6119208E12, 17177.0], [1.611920798E12, 21549.0], [1.611920882E12, 15393.0], [1.611920796E12, 8706.0], [1.611920826E12, 20219.0], [1.611920824E12, 16748.0], [1.611920822E12, 14408.0], [1.611920832E12, 84509.0], [1.61192083E12, 31494.0], [1.611920828E12, 87373.0], [1.611920816E12, 9440.0], [1.611920814E12, 11098.0], [1.611920812E12, 8625.0], [1.61192082E12, 12038.0], [1.611920818E12, 9218.0], [1.611920848E12, 28583.0], [1.611920846E12, 28444.0], [1.611920844E12, 27118.0], [1.611920852E12, 26262.0], [1.61192085E12, 27621.0], [1.611920836E12, 32647.0], [1.611920834E12, 25635.0], [1.611920842E12, 23359.0], [1.61192084E12, 21198.0], [1.611920838E12, 20204.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.611920784E12, 37929.0], [1.611920868E12, 437.0], [1.611920782E12, 34380.5], [1.611920866E12, 124991.0], [1.61192078E12, 35472.5], [1.611920788E12, 9689.0], [1.611920872E12, 7357.0], [1.611920786E12, 40119.5], [1.61192087E12, 1416.0], [1.611920858E12, 71266.0], [1.611920772E12, 29263.0], [1.611920856E12, 49107.0], [1.61192077E12, 23906.0], [1.611920854E12, 35147.0], [1.611920864E12, 118794.0], [1.611920778E12, 34000.0], [1.611920862E12, 119329.0], [1.611920776E12, 32385.0], [1.61192086E12, 58904.5], [1.611920774E12, 29675.0], [1.611920804E12, 54849.0], [1.611920802E12, 56289.0], [1.611920886E12, 15421.0], [1.61192081E12, 63061.0], [1.611920808E12, 60250.0], [1.611920892E12, 111290.0], [1.611920806E12, 61306.5], [1.611920794E12, 30113.5], [1.611920792E12, 6872.0], [1.611920876E12, 7389.0], [1.61192079E12, 43155.0], [1.6119208E12, 54236.0], [1.611920798E12, 53015.0], [1.611920882E12, 15393.0], [1.611920796E12, 48454.0], [1.611920826E12, 79025.0], [1.611920824E12, 45512.0], [1.611920822E12, 32430.0], [1.611920832E12, 87228.5], [1.61192083E12, 82718.0], [1.611920828E12, 87373.0], [1.611920816E12, 13131.5], [1.611920814E12, 65932.0], [1.611920812E12, 66276.0], [1.61192082E12, 70498.0], [1.611920818E12, 70415.5], [1.611920848E12, 42296.0], [1.611920846E12, 55684.5], [1.611920844E12, 96018.0], [1.611920852E12, 36750.0], [1.61192085E12, 42442.0], [1.611920836E12, 87292.0], [1.611920834E12, 71685.0], [1.611920842E12, 43855.0], [1.61192084E12, 34712.0], [1.611920838E12, 57881.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.611920892E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 21041.0, "minX": 1.0, "maxY": 116881.5, "series": [{"data": [[2.0, 35580.0], [8.0, 57881.0], [9.0, 59041.0], [10.0, 39621.0], [11.0, 48497.0], [12.0, 44086.5], [3.0, 52661.0], [13.0, 53110.0], [14.0, 72749.0], [15.0, 98180.5], [1.0, 23906.0], [4.0, 67894.0], [16.0, 75848.0], [17.0, 112207.0], [18.0, 49141.0], [19.0, 116881.5], [5.0, 52391.0], [20.0, 49326.5], [21.0, 72207.5], [22.0, 111290.5], [23.0, 52148.0], [6.0, 41972.0], [25.0, 35790.0], [7.0, 38135.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 22680.0], [8.0, 32502.0], [9.0, 28924.5], [10.0, 21062.0], [11.0, 36082.0], [12.0, 27049.0], [3.0, 21051.0], [13.0, 61837.0], [14.0, 77478.0], [15.0, 21059.5], [1.0, 26360.5], [4.0, 33533.0], [16.0, 21048.0], [17.0, 21048.0], [18.0, 21062.0], [19.0, 21650.5], [5.0, 28869.5], [20.0, 21078.5], [21.0, 73689.0], [22.0, 21044.0], [23.0, 21062.0], [6.0, 21053.5], [25.0, 21041.0], [7.0, 21043.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 25.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 15027.0, "series": [{"data": [[2.0, 6271.0], [8.0, 7634.0], [9.0, 7753.0], [10.0, 10287.0], [11.0, 9319.5], [12.0, 5696.5], [3.0, 7791.0], [13.0, 9034.0], [14.0, 13104.0], [15.0, 10232.0], [1.0, 6093.0], [4.0, 7719.0], [16.0, 12138.0], [17.0, 15027.0], [18.0, 11818.0], [19.0, 12959.0], [5.0, 5866.0], [20.0, 9272.0], [21.0, 6834.5], [22.0, 9123.5], [23.0, 13031.5], [6.0, 9353.0], [25.0, 9099.5], [7.0, 9364.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [3.0, 0.0], [13.0, 0.0], [14.0, 3049.0], [15.0, 0.0], [1.0, 0.0], [4.0, 0.0], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [5.0, 0.0], [20.0, 0.0], [21.0, 3739.0], [22.0, 0.0], [23.0, 0.0], [6.0, 0.0], [25.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 25.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.611920738E12, "maxY": 45.5, "series": [{"data": [[1.611920784E12, 3.0], [1.611920868E12, 16.0], [1.611920782E12, 10.0], [1.611920866E12, 8.5], [1.61192078E12, 3.5], [1.611920788E12, 3.5], [1.611920872E12, 0.5], [1.611920786E12, 6.5], [1.61192087E12, 7.0], [1.611920858E12, 6.5], [1.611920856E12, 3.0], [1.611920864E12, 8.5], [1.611920778E12, 3.0], [1.611920862E12, 7.0], [1.611920776E12, 1.0], [1.61192086E12, 6.0], [1.611920774E12, 0.5], [1.611920804E12, 10.5], [1.611920802E12, 3.5], [1.61192081E12, 2.0], [1.611920808E12, 9.0], [1.611920806E12, 7.0], [1.611920794E12, 2.5], [1.611920792E12, 5.0], [1.61192079E12, 6.5], [1.6119208E12, 2.0], [1.611920798E12, 1.5], [1.611920796E12, 1.0], [1.611920826E12, 6.5], [1.61192074E12, 18.5], [1.611920824E12, 14.0], [1.611920738E12, 41.5], [1.611920822E12, 3.0], [1.611920832E12, 4.0], [1.611920746E12, 33.5], [1.61192083E12, 3.5], [1.611920744E12, 36.0], [1.611920828E12, 5.0], [1.611920742E12, 45.5], [1.611920816E12, 3.5], [1.611920814E12, 3.5], [1.611920812E12, 6.0], [1.61192082E12, 3.0], [1.611920818E12, 6.0], [1.611920848E12, 8.0], [1.611920846E12, 5.0], [1.611920844E12, 3.5], [1.611920852E12, 4.0], [1.611920766E12, 0.5], [1.61192085E12, 7.0], [1.611920752E12, 8.5], [1.611920836E12, 6.0], [1.61192075E12, 33.0], [1.611920834E12, 2.5], [1.611920748E12, 33.5], [1.611920842E12, 4.5], [1.61192084E12, 2.0], [1.611920838E12, 4.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.611920872E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.61192076E12, "maxY": 20.5, "series": [{"data": [[1.611920784E12, 0.5], [1.611920868E12, 0.5], [1.611920782E12, 1.0], [1.611920866E12, 2.5], [1.61192078E12, 2.0], [1.611920788E12, 0.5], [1.611920872E12, 0.5], [1.611920786E12, 4.0], [1.61192087E12, 0.5], [1.611920858E12, 17.5], [1.611920772E12, 0.5], [1.611920856E12, 17.5], [1.61192077E12, 0.5], [1.611920854E12, 20.5], [1.611920864E12, 12.5], [1.611920778E12, 1.5], [1.611920862E12, 17.5], [1.611920776E12, 2.5], [1.61192086E12, 13.0], [1.611920774E12, 0.5], [1.611920804E12, 4.5], [1.611920802E12, 3.5], [1.611920886E12, 0.5], [1.61192081E12, 5.0], [1.611920808E12, 4.5], [1.611920892E12, 0.5], [1.611920806E12, 5.0], [1.611920794E12, 2.0], [1.611920792E12, 0.5], [1.611920876E12, 0.5], [1.61192079E12, 0.5], [1.6119208E12, 5.5], [1.611920798E12, 3.0], [1.611920882E12, 0.5], [1.611920796E12, 2.5], [1.611920826E12, 7.0], [1.611920824E12, 5.5], [1.611920822E12, 7.0], [1.611920832E12, 3.0], [1.61192083E12, 3.0], [1.611920828E12, 0.5], [1.611920816E12, 3.0], [1.611920814E12, 5.5], [1.611920812E12, 4.0], [1.61192082E12, 6.0], [1.611920818E12, 5.0], [1.611920848E12, 5.5], [1.611920846E12, 12.0], [1.611920844E12, 10.0], [1.611920852E12, 12.5], [1.61192085E12, 6.5], [1.611920836E12, 3.5], [1.611920834E12, 4.0], [1.611920842E12, 11.0], [1.61192084E12, 4.5], [1.611920838E12, 7.5]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.611920772E12, 0.5], [1.611920824E12, 0.5], [1.611920834E12, 0.5], [1.611920812E12, 1.5], [1.61192081E12, 0.5], [1.61192082E12, 0.5], [1.61192083E12, 0.5], [1.611920808E12, 0.5]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.611920782E12, 0.5], [1.6119208E12, 0.5], [1.61192082E12, 0.5], [1.611920796E12, 0.5]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.611920868E12, 6.0], [1.611920866E12, 2.5], [1.611920874E12, 1.0], [1.611920872E12, 6.0], [1.61192087E12, 8.5], [1.611920858E12, 2.0], [1.611920856E12, 3.5], [1.611920812E12, 1.5], [1.611920854E12, 0.5], [1.611920864E12, 3.5], [1.61192082E12, 0.5], [1.611920862E12, 3.0], [1.61192086E12, 4.0], [1.611920848E12, 2.0], [1.61192089E12, 11.5], [1.611920888E12, 14.0], [1.611920886E12, 5.5], [1.611920852E12, 6.0], [1.61192085E12, 1.5], [1.611920892E12, 1.5], [1.61192088E12, 7.0], [1.611920878E12, 3.5], [1.611920876E12, 1.5], [1.611920884E12, 8.0], [1.611920882E12, 6.5]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.611920784E12, 1.5], [1.611920826E12, 0.5], [1.611920782E12, 2.0], [1.61192076E12, 1.0], [1.611920824E12, 0.5], [1.61192078E12, 1.0], [1.611920822E12, 1.5], [1.61192081E12, 0.5], [1.611920788E12, 1.0], [1.611920786E12, 1.5], [1.611920828E12, 1.5], [1.611920816E12, 1.0], [1.611920772E12, 2.0], [1.611920814E12, 2.0], [1.611920792E12, 0.5], [1.61192077E12, 0.5], [1.611920834E12, 1.0], [1.611920812E12, 0.5], [1.611920778E12, 4.5], [1.61192082E12, 1.5], [1.611920776E12, 4.5], [1.61192084E12, 1.0], [1.611920818E12, 0.5], [1.611920774E12, 2.0]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.611920784E12, 1.0], [1.611920826E12, 2.0], [1.611920782E12, 2.5], [1.611920824E12, 2.0], [1.61192078E12, 0.5], [1.611920822E12, 1.5], [1.611920832E12, 1.5], [1.611920788E12, 2.5], [1.61192083E12, 3.5], [1.611920786E12, 3.0], [1.611920828E12, 0.5], [1.611920816E12, 2.0], [1.611920814E12, 0.5], [1.611920812E12, 1.0], [1.61192082E12, 8.0], [1.611920818E12, 5.5], [1.611920774E12, 0.5], [1.611920848E12, 1.0], [1.611920804E12, 1.5], [1.611920846E12, 1.5], [1.611920802E12, 6.5], [1.611920844E12, 2.5], [1.61192081E12, 0.5], [1.611920806E12, 1.0], [1.611920794E12, 1.5], [1.611920834E12, 1.0], [1.61192079E12, 2.0], [1.6119208E12, 3.0], [1.611920842E12, 1.5], [1.611920798E12, 3.5], [1.61192084E12, 1.0], [1.611920796E12, 0.5], [1.611920838E12, 0.5]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLProtocolException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.611920892E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.61192076E12, "maxY": 15.5, "series": [{"data": [[1.611920826E12, 3.0], [1.611920868E12, 0.5], [1.611920824E12, 3.0], [1.611920866E12, 0.5], [1.611920822E12, 4.5], [1.611920788E12, 0.5], [1.61192083E12, 0.5], [1.611920872E12, 0.5], [1.611920786E12, 0.5], [1.61192087E12, 0.5], [1.611920816E12, 2.5], [1.611920858E12, 9.5], [1.611920814E12, 1.5], [1.611920856E12, 10.0], [1.611920812E12, 1.0], [1.611920854E12, 14.0], [1.611920864E12, 0.5], [1.61192082E12, 1.5], [1.611920862E12, 2.0], [1.611920818E12, 2.0], [1.61192086E12, 7.5], [1.611920848E12, 5.0], [1.611920804E12, 1.5], [1.611920846E12, 7.5], [1.611920802E12, 0.5], [1.611920844E12, 3.0], [1.611920886E12, 0.5], [1.61192081E12, 1.5], [1.611920852E12, 8.5], [1.611920808E12, 0.5], [1.61192085E12, 4.5], [1.611920892E12, 0.5], [1.611920806E12, 1.5], [1.611920794E12, 1.0], [1.611920836E12, 1.5], [1.611920792E12, 0.5], [1.611920834E12, 2.0], [1.611920876E12, 0.5], [1.6119208E12, 0.5], [1.611920842E12, 6.0], [1.611920798E12, 0.5], [1.61192084E12, 2.5], [1.611920882E12, 0.5], [1.611920796E12, 0.5], [1.611920838E12, 4.0]], "isOverall": false, "label": "Search for jeans-success", "isController": false}, {"data": [[1.611920826E12, 0.5], [1.611920868E12, 6.0], [1.611920824E12, 1.5], [1.611920866E12, 2.5], [1.611920822E12, 1.5], [1.611920832E12, 0.5], [1.611920874E12, 1.0], [1.61192083E12, 0.5], [1.611920872E12, 6.0], [1.611920828E12, 1.5], [1.61192087E12, 8.5], [1.611920816E12, 2.0], [1.611920858E12, 2.0], [1.611920814E12, 0.5], [1.611920856E12, 3.5], [1.611920812E12, 3.5], [1.611920854E12, 0.5], [1.611920864E12, 3.5], [1.61192082E12, 3.0], [1.611920862E12, 3.0], [1.611920818E12, 0.5], [1.61192086E12, 4.0], [1.611920848E12, 2.0], [1.61192089E12, 11.5], [1.611920888E12, 14.0], [1.611920886E12, 5.5], [1.61192081E12, 1.0], [1.611920852E12, 6.0], [1.611920808E12, 0.5], [1.61192085E12, 1.5], [1.611920892E12, 1.5], [1.61192088E12, 7.0], [1.611920878E12, 3.5], [1.611920834E12, 1.5], [1.611920876E12, 1.5], [1.611920884E12, 8.0], [1.61192084E12, 1.0], [1.611920882E12, 6.5], [1.611920838E12, 0.5]], "isOverall": false, "label": "Search for jeans-failure", "isController": false}, {"data": [[1.611920784E12, 2.5], [1.611920826E12, 2.0], [1.611920782E12, 5.0], [1.611920824E12, 1.5], [1.61192078E12, 1.5], [1.611920822E12, 1.5], [1.611920832E12, 1.0], [1.611920788E12, 3.5], [1.61192083E12, 3.5], [1.611920786E12, 4.5], [1.611920828E12, 0.5], [1.611920816E12, 1.0], [1.611920772E12, 2.5], [1.611920814E12, 2.0], [1.61192077E12, 0.5], [1.611920812E12, 1.0], [1.611920778E12, 4.5], [1.61192082E12, 8.0], [1.611920776E12, 4.5], [1.611920818E12, 5.5], [1.611920774E12, 2.5], [1.611920848E12, 1.0], [1.611920804E12, 1.5], [1.611920846E12, 1.5], [1.61192076E12, 1.0], [1.611920802E12, 6.5], [1.611920844E12, 2.5], [1.61192081E12, 0.5], [1.611920806E12, 1.0], [1.611920794E12, 1.5], [1.611920792E12, 0.5], [1.611920834E12, 1.0], [1.61192079E12, 2.0], [1.6119208E12, 3.5], [1.611920842E12, 1.5], [1.611920798E12, 3.5], [1.61192084E12, 1.0], [1.611920796E12, 1.0]], "isOverall": false, "label": "Zalando Home Page-failure", "isController": false}, {"data": [[1.611920784E12, 0.5], [1.611920826E12, 4.0], [1.611920782E12, 1.0], [1.611920824E12, 2.5], [1.611920866E12, 2.0], [1.61192078E12, 2.0], [1.611920822E12, 2.5], [1.611920832E12, 3.0], [1.61192083E12, 2.5], [1.611920786E12, 3.5], [1.611920828E12, 0.5], [1.611920816E12, 0.5], [1.611920858E12, 8.0], [1.611920772E12, 0.5], [1.611920814E12, 4.0], [1.611920856E12, 7.5], [1.61192077E12, 0.5], [1.611920812E12, 3.0], [1.611920854E12, 6.5], [1.611920864E12, 12.0], [1.611920778E12, 1.5], [1.61192082E12, 4.5], [1.611920862E12, 15.5], [1.611920776E12, 2.5], [1.611920818E12, 3.0], [1.61192086E12, 5.5], [1.611920774E12, 0.5], [1.611920848E12, 0.5], [1.611920804E12, 3.0], [1.611920846E12, 4.5], [1.611920802E12, 3.0], [1.611920844E12, 7.0], [1.61192081E12, 3.5], [1.611920852E12, 4.0], [1.611920808E12, 4.0], [1.61192085E12, 2.0], [1.611920806E12, 3.5], [1.611920794E12, 1.0], [1.611920836E12, 2.0], [1.611920834E12, 2.0], [1.61192079E12, 0.5], [1.6119208E12, 5.0], [1.611920842E12, 5.0], [1.611920798E12, 2.5], [1.61192084E12, 2.0], [1.611920796E12, 2.0], [1.611920838E12, 3.5]], "isOverall": false, "label": "Zalando Home Page-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.611920892E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.61192076E12, "maxY": 20.5, "series": [{"data": [[1.611920784E12, 0.5], [1.611920868E12, 0.5], [1.611920782E12, 1.0], [1.611920866E12, 2.5], [1.61192078E12, 2.0], [1.611920788E12, 0.5], [1.611920872E12, 0.5], [1.611920786E12, 4.0], [1.61192087E12, 0.5], [1.611920858E12, 17.5], [1.611920772E12, 0.5], [1.611920856E12, 17.5], [1.61192077E12, 0.5], [1.611920854E12, 20.5], [1.611920864E12, 12.5], [1.611920778E12, 1.5], [1.611920862E12, 17.5], [1.611920776E12, 2.5], [1.61192086E12, 13.0], [1.611920774E12, 0.5], [1.611920804E12, 4.5], [1.611920802E12, 3.5], [1.611920886E12, 0.5], [1.61192081E12, 5.0], [1.611920808E12, 4.5], [1.611920892E12, 0.5], [1.611920806E12, 5.0], [1.611920794E12, 2.0], [1.611920792E12, 0.5], [1.611920876E12, 0.5], [1.61192079E12, 0.5], [1.6119208E12, 5.5], [1.611920798E12, 3.0], [1.611920882E12, 0.5], [1.611920796E12, 2.5], [1.611920826E12, 7.0], [1.611920824E12, 5.5], [1.611920822E12, 7.0], [1.611920832E12, 3.0], [1.61192083E12, 3.0], [1.611920828E12, 0.5], [1.611920816E12, 3.0], [1.611920814E12, 5.5], [1.611920812E12, 4.0], [1.61192082E12, 6.0], [1.611920818E12, 5.0], [1.611920848E12, 5.5], [1.611920846E12, 12.0], [1.611920844E12, 10.0], [1.611920852E12, 12.5], [1.61192085E12, 6.5], [1.611920836E12, 3.5], [1.611920834E12, 4.0], [1.611920842E12, 11.0], [1.61192084E12, 4.5], [1.611920838E12, 7.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.611920784E12, 2.5], [1.611920868E12, 6.0], [1.611920782E12, 5.0], [1.611920866E12, 2.5], [1.61192078E12, 1.5], [1.611920874E12, 1.0], [1.611920788E12, 3.5], [1.611920872E12, 6.0], [1.611920786E12, 4.5], [1.61192087E12, 8.5], [1.611920858E12, 2.0], [1.611920772E12, 2.5], [1.611920856E12, 3.5], [1.61192077E12, 0.5], [1.611920854E12, 0.5], [1.611920864E12, 3.5], [1.611920778E12, 4.5], [1.611920862E12, 3.0], [1.611920776E12, 4.5], [1.61192086E12, 4.0], [1.611920774E12, 2.5], [1.61192089E12, 11.5], [1.611920804E12, 1.5], [1.611920888E12, 14.0], [1.611920802E12, 6.5], [1.611920886E12, 5.5], [1.61192081E12, 1.5], [1.611920808E12, 0.5], [1.611920892E12, 1.5], [1.611920806E12, 1.0], [1.61192088E12, 7.0], [1.611920794E12, 1.5], [1.611920878E12, 3.5], [1.611920792E12, 0.5], [1.611920876E12, 1.5], [1.61192079E12, 2.0], [1.6119208E12, 3.5], [1.611920884E12, 8.0], [1.611920798E12, 3.5], [1.611920882E12, 6.5], [1.611920796E12, 1.0], [1.611920826E12, 2.5], [1.611920824E12, 3.0], [1.611920822E12, 3.0], [1.611920832E12, 1.5], [1.61192083E12, 4.0], [1.611920828E12, 2.0], [1.611920816E12, 3.0], [1.611920814E12, 2.5], [1.611920812E12, 4.5], [1.61192082E12, 11.0], [1.611920818E12, 6.0], [1.611920848E12, 3.0], [1.611920846E12, 1.5], [1.61192076E12, 1.0], [1.611920844E12, 2.5], [1.611920852E12, 6.0], [1.61192085E12, 1.5], [1.611920834E12, 2.5], [1.611920842E12, 1.5], [1.61192084E12, 2.0], [1.611920838E12, 0.5]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.611920892E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

